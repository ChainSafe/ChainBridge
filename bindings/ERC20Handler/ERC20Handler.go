// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ERC20Handler

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ERC20HandlerDepositRecord is an auto generated low-level Go binding around an user-defined struct.
type ERC20HandlerDepositRecord struct {
	OriginChainTokenAddress     common.Address
	DestinationChainID          *big.Int
	TokenID                     string
	DestinationRecipientAddress common.Address
	Depositer                   common.Address
	Amount                      *big.Int
}

// ERC20HandlerABI is the input ABI used to generate the binding from.
const ERC20HandlerABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_bridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_depositRecords\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_originChainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_destinationChainID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_destinationRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_tokenContractAddressToTokenID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_tokenIDToTokenContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositID\",\"type\":\"uint256\"}],\"name\":\"getDepositRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_originChainTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_destinationChainID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_destinationRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"internalType\":\"structERC20Handler.DepositRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destinationChainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// ERC20HandlerBin is the compiled bytecode used for deploying new contracts.
var ERC20HandlerBin = "0x60806040523480156200001157600080fd5b5060405162003e4138038062003e41833981810160405281019062000037919062000096565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000110565b6000815190506200009081620000f6565b92915050565b600060208284031215620000a957600080fd5b6000620000b9848285016200007f565b91505092915050565b6000620000cf82620000d6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010181620000c2565b81146200010d57600080fd5b50565b613d2180620001206000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063cb65d221116200006f578063cb65d2211462000169578063d9caed121462000189578063db95e75c14620001a9578063e245386f14620001df578063fc9539cd146200021a57620000a0565b80631feedba614620000a5578063318c136e14620000db5780636ebcf60714620000fd578063a7ed9ae81462000133575b600080fd5b620000c36004803603810190620000bd919062001b7e565b6200023a565b604051620000d2919062002197565b60405180910390f35b620000e5620002ee565b604051620000f491906200209c565b60405180910390f35b6200011b600480360381019062000115919062001b7e565b62000314565b6040516200012a919062002247565b60405180910390f35b6200015160048036038101906200014b919062001c71565b6200032c565b6040516200016091906200209c565b60405180910390f35b62000187600480360381019062000181919062001d0e565b62000375565b005b620001a76004803603810190620001a1919062001baa565b62000873565b005b620001c76004803603810190620001c1919062001cb6565b62000919565b604051620001d6919062002223565b60405180910390f35b620001fd6004803603810190620001f7919062001cb6565b62000b04565b604051620002119695949392919062002123565b60405180910390f35b62000238600480360381019062000232919062001c2c565b62000c3c565b005b60036020528060005260406000206000915090508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620002e65780601f10620002ba57610100808354040283529160200191620002e6565b820191906000526020600020905b815481529060010190602001808311620002c857829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b6002818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000408576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ff90620021df565b60405180910390fd5b60008060006020840151925060408401519150606084015190506060600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620004fb5780601f10620004cf57610100808354040283529160200191620004fb565b820191906000526020600020905b815481529060010190602001808311620004dd57829003601f168201915b50505050509050604051602001620005139062002055565b60405160208183030381529060405280519060200120816040516020016200053c91906200203c565b604051602081830303815290604052805190602001201415620006ce576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663beab71316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620005cb57600080fd5b505af1158015620005e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000606919062001ce2565b905062000614818762000f8d565b925082600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906200066b929190620018ae565b50856002846040516200067f91906200203c565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b620006dc8487308562000fbb565b6040518060c001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018281526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001838152506004600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190620007cd92919062001935565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a082015181600501559050505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000906576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008fd90620021df565b60405180910390fd5b6200091483308484620010f2565b505050565b62000923620019bc565b600460008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562000a3e5780601f1062000a125761010080835404028352916020019162000a3e565b820191906000526020600020905b81548152906001019060200180831162000a2057829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815250509050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562000be05780601f1062000bb45761010080835404028352916020019162000be0565b820191906000526020600020905b81548152906001019060200180831162000bc257829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154905086565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000ccf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000cc690620021df565b60405180910390fd5b6000806060602084015192506040840151915060405190508360400151808201604001604052606436036064833750600073ffffffffffffffffffffffffffffffffffffffff1660028260405162000d2891906200203c565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000e9357600062000d9062000d88836000600162001229565b6000620012ea565b9050600062000dad62000da7846002865162001229565b6200140b565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663beab71316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000e2157600080fd5b505af115801562000e36573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e5c919062001ce2565b90508084141562000e7b5762000e7583308989620010f2565b62000e89565b62000e8883888862001678565b5b5050505062000f87565b600060405162000ea39062001a34565b604051809103906000f08015801562000ec0573d6000803e3d6000fd5b5090508060028360405162000ed691906200203c565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019062000f77929190620018ae565b5062000f8581858562001678565b505b50505050565b6060828260405160200162000fa49291906200206c565b604051602081830303815290604052905092915050565b60008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b815260040162000fff93929190620020b9565b602060405180830381600087803b1580156200101a57600080fd5b505af11580156200102f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001055919062001c00565b50620010a9826000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620017ac90919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b60008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b81526004016200113693929190620020b9565b602060405180830381600087803b1580156200115157600080fd5b505af115801562001166573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200118c919062001c00565b50620011e0826000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200180490919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b60608084905060608484036040519080825280601f01601f191660200182016040528015620012675781602001600182028036833780820191505090505b50905060008590505b84811015620012dd578281815181106200128657fe5b602001015160f81c60f81b8287830381518110620012a057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001270565b5080925050509392505050565b600060608390506000809050600080905060008090505b8351811015620013eb5760308482815181106200131a57fe5b602001015160f81c60f81b60f81c60ff161015801562001358575060398482815181106200134457fe5b602001015160f81c60f81b60f81c60ff1611155b15620013b05781156200137f5760008614156200137557620013eb565b8580600190039650505b600a8302925060308482815181106200139457fe5b602001015160f81c60f81b60f81c60ff160383019250620013dd565b602e848281518110620013bf57fe5b602001015160f81c60f81b60f81c60ff161415620013dc57600191505b5b808060010191505062001301565b506000851115620013ff5784600a0a820291505b81935050505092915050565b6000606082905060008090506000806000600290505b602a8110156200166b57610100840293508481815181106200143f57fe5b602001015160f81c60f81b60f81c60ff1692508460018201815181106200146257fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff1610158015620014b4575060668373ffffffffffffffffffffffffffffffffffffffff1611155b15620014c65760578303925062001565565b60418373ffffffffffffffffffffffffffffffffffffffff161015801562001505575060468373ffffffffffffffffffffffffffffffffffffffff1611155b15620015175760378303925062001564565b60308373ffffffffffffffffffffffffffffffffffffffff161015801562001556575060398373ffffffffffffffffffffffffffffffffffffffff1611155b1562001563576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff1610158015620015a4575060668273ffffffffffffffffffffffffffffffffffffffff1611155b15620015b65760578203915062001655565b60418273ffffffffffffffffffffffffffffffffffffffff1610158015620015f5575060468273ffffffffffffffffffffffffffffffffffffffff1611155b15620016075760378203915062001654565b60308273ffffffffffffffffffffffffffffffffffffffff161015801562001646575060398273ffffffffffffffffffffffffffffffffffffffff1611155b1562001653576030820391505b5b5b8160108402018401935060028101905062001421565b5082945050505050919050565b60008390508073ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401620016ba929190620020f6565b602060405180830381600087803b158015620016d557600080fd5b505af1158015620016ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001710919062001c00565b5062001764826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620017ac90919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b600080828401905083811015620017fa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620017f19062002201565b60405180910390fd5b8091505092915050565b60006200184883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525062001850565b905092915050565b60008383111582906200189b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620018929190620021bb565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620018f157805160ff191683800117855562001922565b8280016001018555821562001922579182015b828111156200192157825182559160200191906001019062001904565b5b50905062001931919062001a42565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200197857805160ff1916838001178555620019a9565b82800160010185558215620019a9579182015b82811115620019a85782518255916020019190600101906200198b565b5b509050620019b8919062001a42565b5090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b61188f806200245d83390190565b62001a6791905b8082111562001a6357600081600090555060010162001a49565b5090565b90565b60008135905062001a7b816200240e565b92915050565b60008151905062001a928162002428565b92915050565b600082601f83011262001aaa57600080fd5b813562001ac162001abb8262002292565b62002264565b9150808252602083016020830185838301111562001ade57600080fd5b62001aeb83828462002379565b50505092915050565b600082601f83011262001b0657600080fd5b813562001b1d62001b1782620022bf565b62002264565b9150808252602083016020830185838301111562001b3a57600080fd5b62001b4783828462002379565b50505092915050565b60008135905062001b618162002442565b92915050565b60008151905062001b788162002442565b92915050565b60006020828403121562001b9157600080fd5b600062001ba18482850162001a6a565b91505092915050565b60008060006060848603121562001bc057600080fd5b600062001bd08682870162001a6a565b935050602062001be38682870162001a6a565b925050604062001bf68682870162001b50565b9150509250925092565b60006020828403121562001c1357600080fd5b600062001c238482850162001a81565b91505092915050565b60006020828403121562001c3f57600080fd5b600082013567ffffffffffffffff81111562001c5a57600080fd5b62001c688482850162001a98565b91505092915050565b60006020828403121562001c8457600080fd5b600082013567ffffffffffffffff81111562001c9f57600080fd5b62001cad8482850162001af4565b91505092915050565b60006020828403121562001cc957600080fd5b600062001cd98482850162001b50565b91505092915050565b60006020828403121562001cf557600080fd5b600062001d058482850162001b67565b91505092915050565b6000806000806080858703121562001d2557600080fd5b600062001d358782880162001b50565b945050602062001d488782880162001b50565b935050604062001d5b8782880162001a6a565b925050606085013567ffffffffffffffff81111562001d7957600080fd5b62001d878782880162001a98565b91505092959194509250565b62001d9e816200232f565b82525050565b62001daf816200232f565b82525050565b62001dca62001dc4826200232f565b620023be565b82525050565b600062001ddd82620022f7565b62001de9818562002313565b935062001dfb81856020860162002388565b62001e0681620023f0565b840191505092915050565b600062001e1e82620022f7565b62001e2a818562002324565b935062001e3c81856020860162002388565b80840191505092915050565b600062001e5582620022ec565b62001e61818562002302565b935062001e7381856020860162002388565b62001e7e81620023f0565b840191505092915050565b600062001e9682620022ec565b62001ea2818562002313565b935062001eb481856020860162002388565b62001ebf81620023f0565b840191505092915050565b600062001ed9601e8362002313565b91507f73656e646572206d7573742062652062726964676520636f6e747261637400006000830152602082019050919050565b600062001f1b601b8362002313565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b600062001f5d60008362002324565b9150600082019050919050565b600060c08301600083015162001f84600086018262001d93565b50602083015162001f99602086018262001fff565b506040830151848203604086015262001fb3828262001e48565b915050606083015162001fca606086018262001d93565b50608083015162001fdf608086018262001d93565b5060a083015162001ff460a086018262001fff565b508091505092915050565b6200200a816200236f565b82525050565b6200201b816200236f565b82525050565b6200203662002030826200236f565b620023e6565b82525050565b60006200204a828462001e11565b915081905092915050565b6000620020628262001f4e565b9150819050919050565b60006200207a828562002021565b6020820191506200208c828462001db5565b6014820191508190509392505050565b6000602082019050620020b3600083018462001da4565b92915050565b6000606082019050620020d0600083018662001da4565b620020df602083018562001da4565b620020ee604083018462002010565b949350505050565b60006040820190506200210d600083018562001da4565b6200211c602083018462002010565b9392505050565b600060c0820190506200213a600083018962001da4565b62002149602083018862002010565b81810360408301526200215d818762001e89565b90506200216e606083018662001da4565b6200217d608083018562001da4565b6200218c60a083018462002010565b979650505050505050565b60006020820190508181036000830152620021b3818462001e89565b905092915050565b60006020820190508181036000830152620021d7818462001dd0565b905092915050565b60006020820190508181036000830152620021fa8162001eca565b9050919050565b600060208201905081810360008301526200221c8162001f0c565b9050919050565b600060208201905081810360008301526200223f818462001f6a565b905092915050565b60006020820190506200225e600083018462002010565b92915050565b6000604051905081810181811067ffffffffffffffff821117156200228857600080fd5b8060405250919050565b600067ffffffffffffffff821115620022aa57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115620022d757600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006200233c826200234f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015620023a85780820151818401526020810190506200238b565b83811115620023b8576000848401525b50505050565b6000620023cb82620023d2565b9050919050565b6000620023df8262002401565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b62002419816200232f565b81146200242557600080fd5b50565b620024338162002343565b81146200243f57600080fd5b50565b6200244d816200236f565b81146200245957600080fd5b5056fe608060405262000024620000186200002a60201b60201c565b6200003260201b60201c565b62000257565b600033905090565b6200004d8160036200009360201b620012c41790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620000a582826200017760201b60201c565b1562000119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806200186d6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61160680620002676000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063983b2d5611610071578063983b2d56146102e7578063986502751461032b578063a457c2d714610335578063a9059cbb1461039b578063aa271e1a14610401578063dd62ed3e1461045d576100b4565b8063095ea7b3146100b957806318160ddd1461011f57806323b872dd1461013d57806339509351146101c357806340c10f191461022957806370a082311461028f575b600080fd5b610105600480360360408110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104d5565b604051808215151515815260200191505060405180910390f35b6101276104f3565b6040518082815260200191505060405180910390f35b6101a96004803603606081101561015357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104fd565b604051808215151515815260200191505060405180910390f35b61020f600480360360408110156101d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105d6565b604051808215151515815260200191505060405180910390f35b6102756004803603604081101561023f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610689565b604051808215151515815260200191505060405180910390f35b6102d1600480360360208110156102a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610704565b6040518082815260200191505060405180910390f35b610329600480360360208110156102fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061074c565b005b6103336107bd565b005b6103816004803603604081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107cf565b604051808215151515815260200191505060405180910390f35b6103e7600480360360408110156103b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061089c565b604051808215151515815260200191505060405180910390f35b6104436004803603602081101561041757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108ba565b604051808215151515815260200191505060405180910390f35b6104bf6004803603604081101561047357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d7565b6040518082815260200191505060405180910390f35b60006104e96104e261095e565b8484610966565b6001905092915050565b6000600254905090565b600061050a848484610b5d565b6105cb8461051661095e565b6105c68560405180606001604052806028815260200161151960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061057c61095e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1e9092919063ffffffff16565b610966565b600190509392505050565b600061067f6105e361095e565b8461067a85600160006105f461095e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ede90919063ffffffff16565b610966565b6001905092915050565b600061069b61069661095e565b6108ba565b6106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806114c86030913960400191505060405180910390fd5b6106fa8383610f66565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61075c61075761095e565b6108ba565b6107b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806114c86030913960400191505060405180910390fd5b6107ba8161112d565b50565b6107cd6107c861095e565b611187565b565b60006108926107dc61095e565b8461088d856040518060600160405280602581526020016115ac602591396001600061080661095e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1e9092919063ffffffff16565b610966565b6001905092915050565b60006108b06108a961095e565b8484610b5d565b6001905092915050565b60006108d08260036111e190919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806115886024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806114806022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610be3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806115636025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061145d6023913960400191505060405180910390fd5b610c748383836112bf565b610cdf816040518060600160405280602681526020016114a2602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1e9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d72816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ede90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610ecb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e90578082015181840152602081019050610e75565b50505050905090810190601f168015610ebd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611009576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611015600083836112bf565b61102a81600254610ede90919063ffffffff16565b600281905550611081816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ede90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6111418160036112c490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61119b81600361139f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611268576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806115416022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b505050565b6112ce82826111e1565b15611341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6113a982826111e1565b6113fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806114f86021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122040eba01a4f03aecd15df8b2db0e6dad2d610c509130e46eaac658a9b8285365964736f6c63430006040033526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a26469706673582212202e836933c5a8926a9208e0bb12d668b10d0c93c47ec6af130a6c9f06fa13646564736f6c63430006040033"

// DeployERC20Handler deploys a new Ethereum contract, binding an instance of ERC20Handler to it.
func DeployERC20Handler(auth *bind.TransactOpts, backend bind.ContractBackend, bridgeAddress common.Address) (common.Address, *types.Transaction, *ERC20Handler, error) {
	parsed, err := abi.JSON(strings.NewReader(ERC20HandlerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ERC20HandlerBin), backend, bridgeAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ERC20Handler{ERC20HandlerCaller: ERC20HandlerCaller{contract: contract}, ERC20HandlerTransactor: ERC20HandlerTransactor{contract: contract}, ERC20HandlerFilterer: ERC20HandlerFilterer{contract: contract}}, nil
}

// ERC20Handler is an auto generated Go binding around an Ethereum contract.
type ERC20Handler struct {
	ERC20HandlerCaller     // Read-only binding to the contract
	ERC20HandlerTransactor // Write-only binding to the contract
	ERC20HandlerFilterer   // Log filterer for contract events
}

// ERC20HandlerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ERC20HandlerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ERC20HandlerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ERC20HandlerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ERC20HandlerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ERC20HandlerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ERC20HandlerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ERC20HandlerSession struct {
	Contract     *ERC20Handler     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ERC20HandlerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ERC20HandlerCallerSession struct {
	Contract *ERC20HandlerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// ERC20HandlerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ERC20HandlerTransactorSession struct {
	Contract     *ERC20HandlerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// ERC20HandlerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ERC20HandlerRaw struct {
	Contract *ERC20Handler // Generic contract binding to access the raw methods on
}

// ERC20HandlerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ERC20HandlerCallerRaw struct {
	Contract *ERC20HandlerCaller // Generic read-only contract binding to access the raw methods on
}

// ERC20HandlerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ERC20HandlerTransactorRaw struct {
	Contract *ERC20HandlerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewERC20Handler creates a new instance of ERC20Handler, bound to a specific deployed contract.
func NewERC20Handler(address common.Address, backend bind.ContractBackend) (*ERC20Handler, error) {
	contract, err := bindERC20Handler(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ERC20Handler{ERC20HandlerCaller: ERC20HandlerCaller{contract: contract}, ERC20HandlerTransactor: ERC20HandlerTransactor{contract: contract}, ERC20HandlerFilterer: ERC20HandlerFilterer{contract: contract}}, nil
}

// NewERC20HandlerCaller creates a new read-only instance of ERC20Handler, bound to a specific deployed contract.
func NewERC20HandlerCaller(address common.Address, caller bind.ContractCaller) (*ERC20HandlerCaller, error) {
	contract, err := bindERC20Handler(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ERC20HandlerCaller{contract: contract}, nil
}

// NewERC20HandlerTransactor creates a new write-only instance of ERC20Handler, bound to a specific deployed contract.
func NewERC20HandlerTransactor(address common.Address, transactor bind.ContractTransactor) (*ERC20HandlerTransactor, error) {
	contract, err := bindERC20Handler(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ERC20HandlerTransactor{contract: contract}, nil
}

// NewERC20HandlerFilterer creates a new log filterer instance of ERC20Handler, bound to a specific deployed contract.
func NewERC20HandlerFilterer(address common.Address, filterer bind.ContractFilterer) (*ERC20HandlerFilterer, error) {
	contract, err := bindERC20Handler(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ERC20HandlerFilterer{contract: contract}, nil
}

// bindERC20Handler binds a generic wrapper to an already deployed contract.
func bindERC20Handler(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ERC20HandlerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ERC20Handler *ERC20HandlerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ERC20Handler.Contract.ERC20HandlerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ERC20Handler *ERC20HandlerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ERC20Handler.Contract.ERC20HandlerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ERC20Handler *ERC20HandlerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ERC20Handler.Contract.ERC20HandlerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ERC20Handler *ERC20HandlerCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ERC20Handler.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ERC20Handler *ERC20HandlerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ERC20Handler.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ERC20Handler *ERC20HandlerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ERC20Handler.Contract.contract.Transact(opts, method, params...)
}

// Balances is a free data retrieval call binding the contract method 0x6ebcf607.
//
// Solidity: function _balances(address ) constant returns(uint256)
func (_ERC20Handler *ERC20HandlerCaller) Balances(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ERC20Handler.contract.Call(opts, out, "_balances", arg0)
	return *ret0, err
}

// Balances is a free data retrieval call binding the contract method 0x6ebcf607.
//
// Solidity: function _balances(address ) constant returns(uint256)
func (_ERC20Handler *ERC20HandlerSession) Balances(arg0 common.Address) (*big.Int, error) {
	return _ERC20Handler.Contract.Balances(&_ERC20Handler.CallOpts, arg0)
}

// Balances is a free data retrieval call binding the contract method 0x6ebcf607.
//
// Solidity: function _balances(address ) constant returns(uint256)
func (_ERC20Handler *ERC20HandlerCallerSession) Balances(arg0 common.Address) (*big.Int, error) {
	return _ERC20Handler.Contract.Balances(&_ERC20Handler.CallOpts, arg0)
}

// BridgeAddress is a free data retrieval call binding the contract method 0x318c136e.
//
// Solidity: function _bridgeAddress() constant returns(address)
func (_ERC20Handler *ERC20HandlerCaller) BridgeAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _ERC20Handler.contract.Call(opts, out, "_bridgeAddress")
	return *ret0, err
}

// BridgeAddress is a free data retrieval call binding the contract method 0x318c136e.
//
// Solidity: function _bridgeAddress() constant returns(address)
func (_ERC20Handler *ERC20HandlerSession) BridgeAddress() (common.Address, error) {
	return _ERC20Handler.Contract.BridgeAddress(&_ERC20Handler.CallOpts)
}

// BridgeAddress is a free data retrieval call binding the contract method 0x318c136e.
//
// Solidity: function _bridgeAddress() constant returns(address)
func (_ERC20Handler *ERC20HandlerCallerSession) BridgeAddress() (common.Address, error) {
	return _ERC20Handler.Contract.BridgeAddress(&_ERC20Handler.CallOpts)
}

// DepositRecords is a free data retrieval call binding the contract method 0xe245386f.
//
// Solidity: function _depositRecords(uint256 ) constant returns(address _originChainTokenAddress, uint256 _destinationChainID, string _tokenID, address _destinationRecipientAddress, address _depositer, uint256 _amount)
func (_ERC20Handler *ERC20HandlerCaller) DepositRecords(opts *bind.CallOpts, arg0 *big.Int) (struct {
	OriginChainTokenAddress     common.Address
	DestinationChainID          *big.Int
	TokenID                     string
	DestinationRecipientAddress common.Address
	Depositer                   common.Address
	Amount                      *big.Int
}, error) {
	ret := new(struct {
		OriginChainTokenAddress     common.Address
		DestinationChainID          *big.Int
		TokenID                     string
		DestinationRecipientAddress common.Address
		Depositer                   common.Address
		Amount                      *big.Int
	})
	out := ret
	err := _ERC20Handler.contract.Call(opts, out, "_depositRecords", arg0)
	return *ret, err
}

// DepositRecords is a free data retrieval call binding the contract method 0xe245386f.
//
// Solidity: function _depositRecords(uint256 ) constant returns(address _originChainTokenAddress, uint256 _destinationChainID, string _tokenID, address _destinationRecipientAddress, address _depositer, uint256 _amount)
func (_ERC20Handler *ERC20HandlerSession) DepositRecords(arg0 *big.Int) (struct {
	OriginChainTokenAddress     common.Address
	DestinationChainID          *big.Int
	TokenID                     string
	DestinationRecipientAddress common.Address
	Depositer                   common.Address
	Amount                      *big.Int
}, error) {
	return _ERC20Handler.Contract.DepositRecords(&_ERC20Handler.CallOpts, arg0)
}

// DepositRecords is a free data retrieval call binding the contract method 0xe245386f.
//
// Solidity: function _depositRecords(uint256 ) constant returns(address _originChainTokenAddress, uint256 _destinationChainID, string _tokenID, address _destinationRecipientAddress, address _depositer, uint256 _amount)
func (_ERC20Handler *ERC20HandlerCallerSession) DepositRecords(arg0 *big.Int) (struct {
	OriginChainTokenAddress     common.Address
	DestinationChainID          *big.Int
	TokenID                     string
	DestinationRecipientAddress common.Address
	Depositer                   common.Address
	Amount                      *big.Int
}, error) {
	return _ERC20Handler.Contract.DepositRecords(&_ERC20Handler.CallOpts, arg0)
}

// TokenContractAddressToTokenID is a free data retrieval call binding the contract method 0x1feedba6.
//
// Solidity: function _tokenContractAddressToTokenID(address ) constant returns(string)
func (_ERC20Handler *ERC20HandlerCaller) TokenContractAddressToTokenID(opts *bind.CallOpts, arg0 common.Address) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _ERC20Handler.contract.Call(opts, out, "_tokenContractAddressToTokenID", arg0)
	return *ret0, err
}

// TokenContractAddressToTokenID is a free data retrieval call binding the contract method 0x1feedba6.
//
// Solidity: function _tokenContractAddressToTokenID(address ) constant returns(string)
func (_ERC20Handler *ERC20HandlerSession) TokenContractAddressToTokenID(arg0 common.Address) (string, error) {
	return _ERC20Handler.Contract.TokenContractAddressToTokenID(&_ERC20Handler.CallOpts, arg0)
}

// TokenContractAddressToTokenID is a free data retrieval call binding the contract method 0x1feedba6.
//
// Solidity: function _tokenContractAddressToTokenID(address ) constant returns(string)
func (_ERC20Handler *ERC20HandlerCallerSession) TokenContractAddressToTokenID(arg0 common.Address) (string, error) {
	return _ERC20Handler.Contract.TokenContractAddressToTokenID(&_ERC20Handler.CallOpts, arg0)
}

// TokenIDToTokenContractAddress is a free data retrieval call binding the contract method 0xa7ed9ae8.
//
// Solidity: function _tokenIDToTokenContractAddress(string ) constant returns(address)
func (_ERC20Handler *ERC20HandlerCaller) TokenIDToTokenContractAddress(opts *bind.CallOpts, arg0 string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _ERC20Handler.contract.Call(opts, out, "_tokenIDToTokenContractAddress", arg0)
	return *ret0, err
}

// TokenIDToTokenContractAddress is a free data retrieval call binding the contract method 0xa7ed9ae8.
//
// Solidity: function _tokenIDToTokenContractAddress(string ) constant returns(address)
func (_ERC20Handler *ERC20HandlerSession) TokenIDToTokenContractAddress(arg0 string) (common.Address, error) {
	return _ERC20Handler.Contract.TokenIDToTokenContractAddress(&_ERC20Handler.CallOpts, arg0)
}

// TokenIDToTokenContractAddress is a free data retrieval call binding the contract method 0xa7ed9ae8.
//
// Solidity: function _tokenIDToTokenContractAddress(string ) constant returns(address)
func (_ERC20Handler *ERC20HandlerCallerSession) TokenIDToTokenContractAddress(arg0 string) (common.Address, error) {
	return _ERC20Handler.Contract.TokenIDToTokenContractAddress(&_ERC20Handler.CallOpts, arg0)
}

// GetDepositRecord is a free data retrieval call binding the contract method 0xdb95e75c.
//
// Solidity: function getDepositRecord(uint256 depositID) constant returns(ERC20HandlerDepositRecord)
func (_ERC20Handler *ERC20HandlerCaller) GetDepositRecord(opts *bind.CallOpts, depositID *big.Int) (ERC20HandlerDepositRecord, error) {
	var (
		ret0 = new(ERC20HandlerDepositRecord)
	)
	out := ret0
	err := _ERC20Handler.contract.Call(opts, out, "getDepositRecord", depositID)
	return *ret0, err
}

// GetDepositRecord is a free data retrieval call binding the contract method 0xdb95e75c.
//
// Solidity: function getDepositRecord(uint256 depositID) constant returns(ERC20HandlerDepositRecord)
func (_ERC20Handler *ERC20HandlerSession) GetDepositRecord(depositID *big.Int) (ERC20HandlerDepositRecord, error) {
	return _ERC20Handler.Contract.GetDepositRecord(&_ERC20Handler.CallOpts, depositID)
}

// GetDepositRecord is a free data retrieval call binding the contract method 0xdb95e75c.
//
// Solidity: function getDepositRecord(uint256 depositID) constant returns(ERC20HandlerDepositRecord)
func (_ERC20Handler *ERC20HandlerCallerSession) GetDepositRecord(depositID *big.Int) (ERC20HandlerDepositRecord, error) {
	return _ERC20Handler.Contract.GetDepositRecord(&_ERC20Handler.CallOpts, depositID)
}

// Deposit is a paid mutator transaction binding the contract method 0xcb65d221.
//
// Solidity: function deposit(uint256 destinationChainID, uint256 depositNonce, address depositer, bytes data) returns()
func (_ERC20Handler *ERC20HandlerTransactor) Deposit(opts *bind.TransactOpts, destinationChainID *big.Int, depositNonce *big.Int, depositer common.Address, data []byte) (*types.Transaction, error) {
	return _ERC20Handler.contract.Transact(opts, "deposit", destinationChainID, depositNonce, depositer, data)
}

// Deposit is a paid mutator transaction binding the contract method 0xcb65d221.
//
// Solidity: function deposit(uint256 destinationChainID, uint256 depositNonce, address depositer, bytes data) returns()
func (_ERC20Handler *ERC20HandlerSession) Deposit(destinationChainID *big.Int, depositNonce *big.Int, depositer common.Address, data []byte) (*types.Transaction, error) {
	return _ERC20Handler.Contract.Deposit(&_ERC20Handler.TransactOpts, destinationChainID, depositNonce, depositer, data)
}

// Deposit is a paid mutator transaction binding the contract method 0xcb65d221.
//
// Solidity: function deposit(uint256 destinationChainID, uint256 depositNonce, address depositer, bytes data) returns()
func (_ERC20Handler *ERC20HandlerTransactorSession) Deposit(destinationChainID *big.Int, depositNonce *big.Int, depositer common.Address, data []byte) (*types.Transaction, error) {
	return _ERC20Handler.Contract.Deposit(&_ERC20Handler.TransactOpts, destinationChainID, depositNonce, depositer, data)
}

// ExecuteDeposit is a paid mutator transaction binding the contract method 0xfc9539cd.
//
// Solidity: function executeDeposit(bytes data) returns()
func (_ERC20Handler *ERC20HandlerTransactor) ExecuteDeposit(opts *bind.TransactOpts, data []byte) (*types.Transaction, error) {
	return _ERC20Handler.contract.Transact(opts, "executeDeposit", data)
}

// ExecuteDeposit is a paid mutator transaction binding the contract method 0xfc9539cd.
//
// Solidity: function executeDeposit(bytes data) returns()
func (_ERC20Handler *ERC20HandlerSession) ExecuteDeposit(data []byte) (*types.Transaction, error) {
	return _ERC20Handler.Contract.ExecuteDeposit(&_ERC20Handler.TransactOpts, data)
}

// ExecuteDeposit is a paid mutator transaction binding the contract method 0xfc9539cd.
//
// Solidity: function executeDeposit(bytes data) returns()
func (_ERC20Handler *ERC20HandlerTransactorSession) ExecuteDeposit(data []byte) (*types.Transaction, error) {
	return _ERC20Handler.Contract.ExecuteDeposit(&_ERC20Handler.TransactOpts, data)
}

// Withdraw is a paid mutator transaction binding the contract method 0xd9caed12.
//
// Solidity: function withdraw(address tokenAddress, address recipient, uint256 amount) returns()
func (_ERC20Handler *ERC20HandlerTransactor) Withdraw(opts *bind.TransactOpts, tokenAddress common.Address, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _ERC20Handler.contract.Transact(opts, "withdraw", tokenAddress, recipient, amount)
}

// Withdraw is a paid mutator transaction binding the contract method 0xd9caed12.
//
// Solidity: function withdraw(address tokenAddress, address recipient, uint256 amount) returns()
func (_ERC20Handler *ERC20HandlerSession) Withdraw(tokenAddress common.Address, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _ERC20Handler.Contract.Withdraw(&_ERC20Handler.TransactOpts, tokenAddress, recipient, amount)
}

// Withdraw is a paid mutator transaction binding the contract method 0xd9caed12.
//
// Solidity: function withdraw(address tokenAddress, address recipient, uint256 amount) returns()
func (_ERC20Handler *ERC20HandlerTransactorSession) Withdraw(tokenAddress common.Address, recipient common.Address, amount *big.Int) (*types.Transaction, error) {
	return _ERC20Handler.Contract.Withdraw(&_ERC20Handler.TransactOpts, tokenAddress, recipient, amount)
}
var RuntimeBytecode = "0x60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063cb65d221116200006f578063cb65d2211462000169578063d9caed121462000189578063db95e75c14620001a9578063e245386f14620001df578063fc9539cd146200021a57620000a0565b80631feedba614620000a5578063318c136e14620000db5780636ebcf60714620000fd578063a7ed9ae81462000133575b600080fd5b620000c36004803603810190620000bd919062001b7e565b6200023a565b604051620000d2919062002197565b60405180910390f35b620000e5620002ee565b604051620000f491906200209c565b60405180910390f35b6200011b600480360381019062000115919062001b7e565b62000314565b6040516200012a919062002247565b60405180910390f35b6200015160048036038101906200014b919062001c71565b6200032c565b6040516200016091906200209c565b60405180910390f35b62000187600480360381019062000181919062001d0e565b62000375565b005b620001a76004803603810190620001a1919062001baa565b62000873565b005b620001c76004803603810190620001c1919062001cb6565b62000919565b604051620001d6919062002223565b60405180910390f35b620001fd6004803603810190620001f7919062001cb6565b62000b04565b604051620002119695949392919062002123565b60405180910390f35b62000238600480360381019062000232919062001c2c565b62000c3c565b005b60036020528060005260406000206000915090508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620002e65780601f10620002ba57610100808354040283529160200191620002e6565b820191906000526020600020905b815481529060010190602001808311620002c857829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b6002818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000408576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ff90620021df565b60405180910390fd5b60008060006020840151925060408401519150606084015190506060600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620004fb5780601f10620004cf57610100808354040283529160200191620004fb565b820191906000526020600020905b815481529060010190602001808311620004dd57829003601f168201915b50505050509050604051602001620005139062002055565b60405160208183030381529060405280519060200120816040516020016200053c91906200203c565b604051602081830303815290604052805190602001201415620006ce576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663beab71316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620005cb57600080fd5b505af1158015620005e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000606919062001ce2565b905062000614818762000f8d565b925082600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906200066b929190620018ae565b50856002846040516200067f91906200203c565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b620006dc8487308562000fbb565b6040518060c001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018281526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001838152506004600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190620007cd92919062001935565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a082015181600501559050505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000906576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008fd90620021df565b60405180910390fd5b6200091483308484620010f2565b505050565b62000923620019bc565b600460008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562000a3e5780601f1062000a125761010080835404028352916020019162000a3e565b820191906000526020600020905b81548152906001019060200180831162000a2057829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815250509050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562000be05780601f1062000bb45761010080835404028352916020019162000be0565b820191906000526020600020905b81548152906001019060200180831162000bc257829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154905086565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000ccf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000cc690620021df565b60405180910390fd5b6000806060602084015192506040840151915060405190508360400151808201604001604052606436036064833750600073ffffffffffffffffffffffffffffffffffffffff1660028260405162000d2891906200203c565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000e9357600062000d9062000d88836000600162001229565b6000620012ea565b9050600062000dad62000da7846002865162001229565b6200140b565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663beab71316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000e2157600080fd5b505af115801562000e36573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e5c919062001ce2565b90508084141562000e7b5762000e7583308989620010f2565b62000e89565b62000e8883888862001678565b5b5050505062000f87565b600060405162000ea39062001a34565b604051809103906000f08015801562000ec0573d6000803e3d6000fd5b5090508060028360405162000ed691906200203c565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019062000f77929190620018ae565b5062000f8581858562001678565b505b50505050565b6060828260405160200162000fa49291906200206c565b604051602081830303815290604052905092915050565b60008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b815260040162000fff93929190620020b9565b602060405180830381600087803b1580156200101a57600080fd5b505af11580156200102f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001055919062001c00565b50620010a9826000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620017ac90919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b60008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b81526004016200113693929190620020b9565b602060405180830381600087803b1580156200115157600080fd5b505af115801562001166573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200118c919062001c00565b50620011e0826000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200180490919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b60608084905060608484036040519080825280601f01601f191660200182016040528015620012675781602001600182028036833780820191505090505b50905060008590505b84811015620012dd578281815181106200128657fe5b602001015160f81c60f81b8287830381518110620012a057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505062001270565b5080925050509392505050565b600060608390506000809050600080905060008090505b8351811015620013eb5760308482815181106200131a57fe5b602001015160f81c60f81b60f81c60ff161015801562001358575060398482815181106200134457fe5b602001015160f81c60f81b60f81c60ff1611155b15620013b05781156200137f5760008614156200137557620013eb565b8580600190039650505b600a8302925060308482815181106200139457fe5b602001015160f81c60f81b60f81c60ff160383019250620013dd565b602e848281518110620013bf57fe5b602001015160f81c60f81b60f81c60ff161415620013dc57600191505b5b808060010191505062001301565b506000851115620013ff5784600a0a820291505b81935050505092915050565b6000606082905060008090506000806000600290505b602a8110156200166b57610100840293508481815181106200143f57fe5b602001015160f81c60f81b60f81c60ff1692508460018201815181106200146257fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff1610158015620014b4575060668373ffffffffffffffffffffffffffffffffffffffff1611155b15620014c65760578303925062001565565b60418373ffffffffffffffffffffffffffffffffffffffff161015801562001505575060468373ffffffffffffffffffffffffffffffffffffffff1611155b15620015175760378303925062001564565b60308373ffffffffffffffffffffffffffffffffffffffff161015801562001556575060398373ffffffffffffffffffffffffffffffffffffffff1611155b1562001563576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff1610158015620015a4575060668273ffffffffffffffffffffffffffffffffffffffff1611155b15620015b65760578203915062001655565b60418273ffffffffffffffffffffffffffffffffffffffff1610158015620015f5575060468273ffffffffffffffffffffffffffffffffffffffff1611155b15620016075760378203915062001654565b60308273ffffffffffffffffffffffffffffffffffffffff161015801562001646575060398273ffffffffffffffffffffffffffffffffffffffff1611155b1562001653576030820391505b5b5b8160108402018401935060028101905062001421565b5082945050505050919050565b60008390508073ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401620016ba929190620020f6565b602060405180830381600087803b158015620016d557600080fd5b505af1158015620016ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001710919062001c00565b5062001764826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620017ac90919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b600080828401905083811015620017fa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620017f19062002201565b60405180910390fd5b8091505092915050565b60006200184883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525062001850565b905092915050565b60008383111582906200189b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620018929190620021bb565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620018f157805160ff191683800117855562001922565b8280016001018555821562001922579182015b828111156200192157825182559160200191906001019062001904565b5b50905062001931919062001a42565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200197857805160ff1916838001178555620019a9565b82800160010185558215620019a9579182015b82811115620019a85782518255916020019190600101906200198b565b5b509050620019b8919062001a42565b5090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b61188f806200245d83390190565b62001a6791905b8082111562001a6357600081600090555060010162001a49565b5090565b90565b60008135905062001a7b816200240e565b92915050565b60008151905062001a928162002428565b92915050565b600082601f83011262001aaa57600080fd5b813562001ac162001abb8262002292565b62002264565b9150808252602083016020830185838301111562001ade57600080fd5b62001aeb83828462002379565b50505092915050565b600082601f83011262001b0657600080fd5b813562001b1d62001b1782620022bf565b62002264565b9150808252602083016020830185838301111562001b3a57600080fd5b62001b4783828462002379565b50505092915050565b60008135905062001b618162002442565b92915050565b60008151905062001b788162002442565b92915050565b60006020828403121562001b9157600080fd5b600062001ba18482850162001a6a565b91505092915050565b60008060006060848603121562001bc057600080fd5b600062001bd08682870162001a6a565b935050602062001be38682870162001a6a565b925050604062001bf68682870162001b50565b9150509250925092565b60006020828403121562001c1357600080fd5b600062001c238482850162001a81565b91505092915050565b60006020828403121562001c3f57600080fd5b600082013567ffffffffffffffff81111562001c5a57600080fd5b62001c688482850162001a98565b91505092915050565b60006020828403121562001c8457600080fd5b600082013567ffffffffffffffff81111562001c9f57600080fd5b62001cad8482850162001af4565b91505092915050565b60006020828403121562001cc957600080fd5b600062001cd98482850162001b50565b91505092915050565b60006020828403121562001cf557600080fd5b600062001d058482850162001b67565b91505092915050565b6000806000806080858703121562001d2557600080fd5b600062001d358782880162001b50565b945050602062001d488782880162001b50565b935050604062001d5b8782880162001a6a565b925050606085013567ffffffffffffffff81111562001d7957600080fd5b62001d878782880162001a98565b91505092959194509250565b62001d9e816200232f565b82525050565b62001daf816200232f565b82525050565b62001dca62001dc4826200232f565b620023be565b82525050565b600062001ddd82620022f7565b62001de9818562002313565b935062001dfb81856020860162002388565b62001e0681620023f0565b840191505092915050565b600062001e1e82620022f7565b62001e2a818562002324565b935062001e3c81856020860162002388565b80840191505092915050565b600062001e5582620022ec565b62001e61818562002302565b935062001e7381856020860162002388565b62001e7e81620023f0565b840191505092915050565b600062001e9682620022ec565b62001ea2818562002313565b935062001eb481856020860162002388565b62001ebf81620023f0565b840191505092915050565b600062001ed9601e8362002313565b91507f73656e646572206d7573742062652062726964676520636f6e747261637400006000830152602082019050919050565b600062001f1b601b8362002313565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b600062001f5d60008362002324565b9150600082019050919050565b600060c08301600083015162001f84600086018262001d93565b50602083015162001f99602086018262001fff565b506040830151848203604086015262001fb3828262001e48565b915050606083015162001fca606086018262001d93565b50608083015162001fdf608086018262001d93565b5060a083015162001ff460a086018262001fff565b508091505092915050565b6200200a816200236f565b82525050565b6200201b816200236f565b82525050565b6200203662002030826200236f565b620023e6565b82525050565b60006200204a828462001e11565b915081905092915050565b6000620020628262001f4e565b9150819050919050565b60006200207a828562002021565b6020820191506200208c828462001db5565b6014820191508190509392505050565b6000602082019050620020b3600083018462001da4565b92915050565b6000606082019050620020d0600083018662001da4565b620020df602083018562001da4565b620020ee604083018462002010565b949350505050565b60006040820190506200210d600083018562001da4565b6200211c602083018462002010565b9392505050565b600060c0820190506200213a600083018962001da4565b62002149602083018862002010565b81810360408301526200215d818762001e89565b90506200216e606083018662001da4565b6200217d608083018562001da4565b6200218c60a083018462002010565b979650505050505050565b60006020820190508181036000830152620021b3818462001e89565b905092915050565b60006020820190508181036000830152620021d7818462001dd0565b905092915050565b60006020820190508181036000830152620021fa8162001eca565b9050919050565b600060208201905081810360008301526200221c8162001f0c565b9050919050565b600060208201905081810360008301526200223f818462001f6a565b905092915050565b60006020820190506200225e600083018462002010565b92915050565b6000604051905081810181811067ffffffffffffffff821117156200228857600080fd5b8060405250919050565b600067ffffffffffffffff821115620022aa57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115620022d757600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006200233c826200234f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015620023a85780820151818401526020810190506200238b565b83811115620023b8576000848401525b50505050565b6000620023cb82620023d2565b9050919050565b6000620023df8262002401565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b62002419816200232f565b81146200242557600080fd5b50565b620024338162002343565b81146200243f57600080fd5b50565b6200244d816200236f565b81146200245957600080fd5b5056fe608060405262000024620000186200002a60201b60201c565b6200003260201b60201c565b62000257565b600033905090565b6200004d8160036200009360201b620012c41790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620000a582826200017760201b60201c565b1562000119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806200186d6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61160680620002676000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063983b2d5611610071578063983b2d56146102e7578063986502751461032b578063a457c2d714610335578063a9059cbb1461039b578063aa271e1a14610401578063dd62ed3e1461045d576100b4565b8063095ea7b3146100b957806318160ddd1461011f57806323b872dd1461013d57806339509351146101c357806340c10f191461022957806370a082311461028f575b600080fd5b610105600480360360408110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104d5565b604051808215151515815260200191505060405180910390f35b6101276104f3565b6040518082815260200191505060405180910390f35b6101a96004803603606081101561015357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104fd565b604051808215151515815260200191505060405180910390f35b61020f600480360360408110156101d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105d6565b604051808215151515815260200191505060405180910390f35b6102756004803603604081101561023f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610689565b604051808215151515815260200191505060405180910390f35b6102d1600480360360208110156102a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610704565b6040518082815260200191505060405180910390f35b610329600480360360208110156102fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061074c565b005b6103336107bd565b005b6103816004803603604081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107cf565b604051808215151515815260200191505060405180910390f35b6103e7600480360360408110156103b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061089c565b604051808215151515815260200191505060405180910390f35b6104436004803603602081101561041757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108ba565b604051808215151515815260200191505060405180910390f35b6104bf6004803603604081101561047357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d7565b6040518082815260200191505060405180910390f35b60006104e96104e261095e565b8484610966565b6001905092915050565b6000600254905090565b600061050a848484610b5d565b6105cb8461051661095e565b6105c68560405180606001604052806028815260200161151960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061057c61095e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1e9092919063ffffffff16565b610966565b600190509392505050565b600061067f6105e361095e565b8461067a85600160006105f461095e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ede90919063ffffffff16565b610966565b6001905092915050565b600061069b61069661095e565b6108ba565b6106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806114c86030913960400191505060405180910390fd5b6106fa8383610f66565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61075c61075761095e565b6108ba565b6107b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806114c86030913960400191505060405180910390fd5b6107ba8161112d565b50565b6107cd6107c861095e565b611187565b565b60006108926107dc61095e565b8461088d856040518060600160405280602581526020016115ac602591396001600061080661095e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1e9092919063ffffffff16565b610966565b6001905092915050565b60006108b06108a961095e565b8484610b5d565b6001905092915050565b60006108d08260036111e190919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806115886024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806114806022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610be3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806115636025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061145d6023913960400191505060405180910390fd5b610c748383836112bf565b610cdf816040518060600160405280602681526020016114a2602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e1e9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d72816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ede90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610ecb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e90578082015181840152602081019050610e75565b50505050905090810190601f168015610ebd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611009576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611015600083836112bf565b61102a81600254610ede90919063ffffffff16565b600281905550611081816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ede90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6111418160036112c490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61119b81600361139f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611268576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806115416022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b505050565b6112ce82826111e1565b15611341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6113a982826111e1565b6113fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806114f86021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122040eba01a4f03aecd15df8b2db0e6dad2d610c509130e46eaac658a9b8285365964736f6c63430006040033526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a26469706673582212202e836933c5a8926a9208e0bb12d668b10d0c93c47ec6af130a6c9f06fa13646564736f6c63430006040033"
