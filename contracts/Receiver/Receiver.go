// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package Receiver

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ReceiverABI is the input ABI used to generate the binding from.
const ReceiverABI = "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_depositThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorThreshold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_originChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"DepositExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_originChain\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"_voteStatus\",\"type\":\"uint8\"}],\"name\":\"DepositProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_originChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enumReceiver.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"_voteStatus\",\"type\":\"uint8\"}],\"name\":\"DepositProposalVote\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"DepositProposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numNo\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DepositThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ThresholdProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.ThresholdType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numNo\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ValidatorProposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"enumReceiver.ValidatorActionType\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numNo\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ValidatorThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Validators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_originChain\",\"type\":\"uint256\"}],\"name\":\"createDepositProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.ThresholdType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"createThresholdProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"enumReceiver.ValidatorActionType\",\"name\":\"_action\",\"type\":\"uint8\"}],\"name\":\"createValidatorProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"executeDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"getDepositProposal\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numNo\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"}],\"name\":\"voteDepositProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"enumReceiver.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"},{\"internalType\":\"enumReceiver.ThresholdType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"voteThresholdProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"enumReceiver.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"}],\"name\":\"voteValidatorProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// ReceiverBin is the compiled bytecode used for deploying new contracts.
const ReceiverBin = `6080604052348015620000125760006000fd5b50604051620035443803806200354483398181016040526060811015620000395760006000fd5b81019080805160405193929190846401000000008211156200005b5760006000fd5b83820191506020820185811115620000735760006000fd5b8251866020820283011164010000000082111715620000925760006000fd5b8083526020830192505050908051906020019060200280838360005b83811015620000cc5780820151818401525b602081019050620000ae565b5050505090500160405260200180519060200190929190805190602001909291905050505b6000821115156200014e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180620034f06029913960400191505060405180910390fd5b600081111515620001ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018062003519602b913960400191505060405180910390fd5b6000600090505b83518110156200023c576001600260005060008684815181101515620001d457fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8080600101915050620001b2565b50825160036000508190909055508160006000508190909055508060016000508190909055505b5050506200026c565b613274806200027c6000396000f3fe60806040523480156100115760006000fd5b50600436106100fa5760003560e01c806362e7326311610098578063b322536911610067578063b322536914610557578063cb4815e014610593578063dcc2e4db14610619578063e7d3696c14610658576100fa565b806362e732631461030d5780638a0459111461035f57806395531e47146103e55780639bf4864214610460576100fa565b80632bfd6d08116100d45780632bfd6d0814610238578063331ba9131461027f57806350d68ed8146102d157806360e4f8ab146102ef576100fa565b80631e43698c1461010057806323589e811461011e578063277ae8dd146101db576100fa565b60006000fd5b61010861069e565b6040518082815260200191505060405180910390f35b610161600480360360208110156101355760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a7565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018560018111156101a357fe5b60ff1681526020018481526020018381526020018260038111156101c357fe5b60ff1681526020019550505050505060405180910390f35b61021e600480360360208110156101f25760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610720565b604051808215151515815260200191505060405180910390f35b61027d6004803603606081101561024f5760006000fd5b8101908080356000191690602001909291908035906020019092919080359060200190929190505050610745565b005b6102cf600480360360408110156102965760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610bf4565b005b6102d9611492565b6040518082815260200191505060405180910390f35b6102f761149b565b6040518082815260200191505060405180910390f35b61035d600480360360408110156103245760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff1690602001909291905050506114a4565b005b610396600480360360408110156103765760006000fd5b810190808035906020019092919080359060200190929190505050611cf6565b6040518087600019166000191681526020018681526020018581526020018481526020018381526020018260038111156103cc57fe5b60ff168152602001965050505050505060405180910390f35b610412600480360360208110156103fc5760006000fd5b8101908080359060200190929190505050611d61565b6040518086815260200185600181111561042857fe5b60ff16815260200184815260200183815260200182600381111561044857fe5b60ff1681526020019550505050505060405180910390f35b610555600480360360808110156104775760006000fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104c95760006000fd5b8201836020820111156104dc5760006000fd5b803590602001918460018302840111640100000000831117156104ff5760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290505050611dbd565b005b6105916004803603604081101561056e5760006000fd5b8101908080359060200190929190803560ff169060200190929190505050612155565b005b6105ca600480360360408110156105aa5760006000fd5b8101908080359060200190929190803590602001909291905050506124a1565b60405180876000191660001916815260200186815260200185815260200184815260200183815260200182600381111561060057fe5b60ff168152602001965050505050505060405180910390f35b610656600480360360408110156106305760006000fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506125a3565b005b61069c6004803603606081101561066f5760006000fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050612aba565b005b60006000505481565b60056000506020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060020160005054908060030160005054908060040160009054906101000a900460ff16905085565b600260005060205280600052604060002060009150909054906101000a900460ff1681565b600260005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561080c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081526020015060200191505060405180910390fd5b6000600381111561081957fe5b60066000506000838152602001908152602001600020600050600084815260200190815260200160002060005060060160009054906101000a900460ff16600381111561086257fe5b1415156108da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f412070726f706f73616c20616c7265616479206578697374732100000000000081526020015060200191505060405180910390fd5b600160006000505414156109d7576040518060c001604052808460001916815260200183815260200182815260200160018152602001600081526020016002600381111561092457fe5b8152602001506006600050600083815260200190815260200160002060005060008481526020019081526020016000206000506000820151816000016000509060001916905560208201518160010160005090905560408201518160020160005090905560608201518160040160005090905560808201518160050160005090905560a08201518160060160006101000a81548160ff021916908360038111156109ca57fe5b0217905550905050610ac2565b6040518060c0016040528084600019168152602001838152602001828152602001600181526020016000815260200160016003811115610a1357fe5b8152602001506006600050600083815260200190815260200160002060005060008481526020019081526020016000206000506000820151816000016000509060001916905560208201518160010160005090905560408201518160020160005090905560608201518160040160005090905560808201518160050160005090905560a08201518160060160006101000a81548160ff02191690836003811115610ab957fe5b02179055509050505b600160066000506000838152602001908152602001600020600050600084815260200190815260200160002060005060030160005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa3c54ef04177bc4ee7cfc4f38715fd8ea57d3684f5c1dab61c4c7a50cd1c207a83838360066000506000868152602001908152602001600020600050600087815260200190815260200160002060005060060160009054906101000a900460ff16604051808560001916600019168152602001848152602001838152602001826003811115610bd757fe5b60ff16815260200194505050505060405180910390a15b5b505050565b600260005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610cbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081526020015060200191505060405180910390fd5b6001816001811115610cc957fe5b11151515610d22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806131ca6022913960400191505060405180910390fd5b60016001811115610d2f57fe5b816001811115610d3b57fe5b148015610d9b575060001515600260005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b151515610e13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f56616c696461746f72206973206e6f742061637469766521000000000000000081526020015060200191505060405180910390fd5b60006001811115610e2057fe5b816001811115610e2c57fe5b148015610e8c575060011515600260005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b151515610f04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f56616c696461746f7220697320616c726561647920616374697665210000000081526020015060200191505060405180910390fd5b60006003811115610f1157fe5b600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060040160009054906101000a900460ff166003811115610f7257fe5b141515610fca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806131a66024913960400191505060405180910390fd5b60016001600050541415611292576040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200182600181111561100b57fe5b815260200160018152602001600081526020016000600381111561102b57fe5b815260200150600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360018111156110e157fe5b021790555060408201518160020160005090905560608201518160030160005090905560808201518160040160006101000a81548160ff0219169083600381111561112857fe5b02179055509050506000600181111561113d57fe5b600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160149054906101000a900460ff16600181111561119e57fe5b141561121a576001600260005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003600081815054809291906001019190509090555061128d565b6000600260005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060036000818150548092919060019003919050909055505b6113eb565b6040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018260018111156112c557fe5b81526020016001815260200160008152602001600160038111156112e557fe5b815260200150600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083600181111561139b57fe5b021790555060408201518160020160005090905560608201518160030160005090905560808201518160040160006101000a81548160ff021916908360038111156113e257fe5b02179055509050505b6001600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060010160005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050565b60016000505481565b60036000505481565b600260005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561156b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081526020015060200191505060405180910390fd5b6000600381111561157857fe5b600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060040160009054906101000a900460ff1660038111156115d957fe5b14151515611652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468657265206973206e6f206163746976652070726f706f73616c210000000081526020015060200191505060405180910390fd5b600560005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060010160005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515611760576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f56616c696461746f722068617320616c726561647920766f746564210000000081526020015060200191505060405180910390fd5b600181600181111561176e57fe5b111515156117e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f566f7465206f7574206f662074686520766f746520656e756d2072616e67652181526020015060200191505060405180910390fd5b600060018111156117f457fe5b81600181111561180057fe5b141561186757600560005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160008181505480929190600101919050909055506118c4565b600560005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060030160008181505480929190600101919050909055505b6001600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060010160005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160005054600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060020160005054101580611a1a5750600160005054600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506003016000505460036000505403105b15611cf057600560005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060030160005054600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600201600050541115611cef5760006001811115611aca57fe5b600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160149054906101000a900460ff166001811115611b2b57fe5b1415611c11576001600260005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360008181505480929190600101919050909055506000600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060040160006101000a81548160ff02191690836003811115611c0757fe5b0217905550611cee565b6000600260005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060036000818150548092919060019003919050909055506000600560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060040160006101000a81548160ff02191690836003811115611ce857fe5b02179055505b5b5b5b5b5050565b6006600050602052816000526040600020600050602052806000526040600020600091509150508060000160005054908060010160005054908060020160005054908060040160005054908060050160005054908060060160009054906101000a900460ff16905086565b60046000506020528060005260406000206000915090508060000160005054908060010160009054906101000a900460ff16908060030160005054908060040160005054908060050160009054906101000a900460ff16905085565b6000600660005060008681526020019081526020016000206000506000858152602001908152602001600020600050905060026003811115611dfb57fe5b8160060160009054906101000a900460ff166003811115611e1857fe5b141515611e90576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f566f746520686173206e6f742066696e616c697a65642100000000000000000081526020015060200191505060405180910390fd5b600060005054816004016000505410151515611f17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f566f746520686173206e6f74207061737365642100000000000000000000000081526020015060200191505060405180910390fd5b806000016000505460001916828051906020012060001916141515611fa7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f496e636f7272656374206461746120737570706c69656420666f72206861736881526020015060200191505060405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff16635dcd653687856040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156120205780820151818401525b602081019050612004565b50505050905090810190601f16801561204d5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561206e5760006000fd5b505af1158015612083573d600060003e3d6000fd5b50505050600360066000506000888152602001908152602001600020600050600087815260200190815260200160002060005060060160006101000a81548160ff021916908360038111156120d457fe5b02179055507f27d38e802660c3b01a484e1e1928270cd6325dd105c1fe943e7e8c71346ec367868686604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a150505b50505050565b600260005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561221c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081526020015060200191505060405180910390fd5b600081600181111561222a57fe5b9050600360005054831115151561228c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806131ec6030913960400191505060405180910390fd5b6001600381111561229957fe5b6004600050600083815260200190815260200160002060005060050160009054906101000a900460ff1660038111156122ce57fe5b14151515612347576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f412070726f706f73616c2069732061637469766521000000000000000000000081526020015060200191505060405180910390fd5b6040518060a0016040528084815260200183600181111561236457fe5b815260200160018152602001600081526020016001600381111561238457fe5b8152602001506004600050600083815260200190815260200160002060005060008201518160000160005090905560208201518160010160006101000a81548160ff021916908360018111156123d657fe5b021790555060408201518160030160005090905560608201518160040160005090905560808201518160050160006101000a81548160ff0219169083600381111561241d57fe5b021790555090505060016004600050600083815260200190815260200160002060005060020160005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505b5b5050565b6000600060006000600060006124b561315d565b600660005060008a815260200190815260200160002060005060008981526020019081526020016000206000506040518060c0016040529081600082016000505460001916600019168152602001600182016000505481526020016002820160005054815260200160048201600050548152602001600582016000505481526020016006820160009054906101000a900460ff16600381111561255457fe5b600381111561255f57fe5b815260200150509050806000015181602001518260400151836060015184608001518560a001519650965096509650965096505061259956505b9295509295509295565b600260005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561266a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081526020015060200191505060405180910390fd5b600081600181111561267857fe5b90506001600381111561268757fe5b6004600050600083815260200190815260200160002060005060050160009054906101000a900460ff1660038111156126bc57fe5b141515612734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468657265206973206e6f206163746976652070726f706f73616c210000000081526020015060200191505060405180910390fd5b6004600050600082815260200190815260200160002060005060020160005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f56616c696461746f722068617320616c726561647920766f746564210000000081526020015060200191505060405180910390fd5b6000600181111561282357fe5b83600181111561282f57fe5b141561286a576004600050600082815260200190815260200160002060005060030160008181505480929190600101919050909055506128bb565b6001600181111561287757fe5b83600181111561288357fe5b14156128ba576004600050600082815260200190815260200160002060005060040160008181505480929190600101919050909055505b5b60016004600050600083815260200190815260200160002060005060020160005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160005054600460005060008381526020019081526020016000206000506003016000505410158061298d5750600160005054600460005060008381526020019081526020016000206000506004016000505460036000505403105b15612ab35760026004600050600083815260200190815260200160002060005060050160006101000a81548160ff021916908360038111156129cb57fe5b0217905550600460005060008281526020019081526020016000206000506004016000505460046000506000838152602001908152602001600020600050600301600050541115612ab25760006001811115612a2357fe5b826001811115612a2f57fe5b1415612a655760046000506000828152602001908152602001600020600050600001600050546001600050819090905550612ab1565b60016001811115612a7257fe5b826001811115612a7e57fe5b1415612ab057600460005060008281526020019081526020016000206000506000016000505460006000508190909055505b5b5b5b505b5b5050565b600260005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515612b81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081526020015060200191505060405180910390fd5b60006003811115612b8e57fe5b60066000506000858152602001908152602001600020600050600084815260200190815260200160002060005060060160009054906101000a900460ff166003811115612bd757fe5b14151515612c50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468657265206973206e6f206163746976652070726f706f73616c210000000081526020015060200191505060405180910390fd5b60026003811115612c5d57fe5b60066000506000858152602001908152602001600020600050600084815260200190815260200160002060005060060160009054906101000a900460ff166003811115612ca657fe5b101515612cfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061321c6024913960400191505060405180910390fd5b60066000506000848152602001908152602001600020600050600083815260200190815260200160002060005060030160005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612df4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f56616c696461746f722068617320616c726561647920766f746564210000000081526020015060200191505060405180910390fd5b6001816001811115612e0257fe5b11151515612e7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f496e76616c696420766f7465210000000000000000000000000000000000000081526020015060200191505060405180910390fd5b60006001811115612e8857fe5b816001811115612e9457fe5b1415612ee3576006600050600084815260200190815260200160002060005060008381526020019081526020016000206000506004016000818150548092919060010191905090905550612f48565b60016001811115612ef057fe5b816001811115612efc57fe5b1415612f475760066000506000848152602001908152602001600020600050600083815260200190815260200160002060005060050160008181505480929190600101919050909055505b5b600160066000506000858152602001908152602001600020600050600084815260200190815260200160002060005060030160005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600050546006600050600085815260200190815260200160002060005060008481526020019081526020016000206000506004016000505410158061305657506000600050546006600050600085815260200190815260200160002060005060008481526020019081526020016000206000506005016000505460036000505403105b156130ae57600260066000506000858152602001908152602001600020600050600084815260200190815260200160002060005060060160006101000a81548160ff021916908360038111156130a857fe5b02179055505b7f40fc0ff8dcb86fbd4d70d3e1237dbd6dab58a03c8a1a3af7b27a4f70b540a66b83838360066000506000888152602001908152602001600020600050600087815260200190815260200160002060005060060160009054906101000a900460ff166040518085815260200184815260200183600181111561312c57fe5b60ff16815260200182600381111561314057fe5b60ff16815260200194505050505060405180910390a15b5b505050565b6040518060c001604052806000600019168152602001600081526020016000815260200160008152602001600081526020016000600381111561319c57fe5b8152602001509056fe546865726520697320616c726561647920616e206163746976652070726f706f73616c21416374696f6e206f7574206f662074686520766f746520656e756d2072616e676521546f74616c2076616c7565206d757374206265206c6f776572207468616e20746f74616c2056616c696461746f72732150726f706f73616c2068617320616c7265616479206265656e2066696e616c697a656421a265627a7a72315820f94c7662b7fd021cfbec0cbba1f8b3d336b4c45bf75997a7304f434f12160d5364736f6c634300050c00324465706f736974207468726573686f6c64206d7573742062652067726561746572207468616e20302156616c696461746f72207468726573686f6c64206d7573742062652067726561746572207468616e203021`

// DeployReceiver deploys a new Ethereum contract, binding an instance of Receiver to it.
func DeployReceiver(auth *bind.TransactOpts, backend bind.ContractBackend, _addrs []common.Address, _depositThreshold *big.Int, _validatorThreshold *big.Int) (common.Address, *types.Transaction, *Receiver, error) {
	parsed, err := abi.JSON(strings.NewReader(ReceiverABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ReceiverBin), backend, _addrs, _depositThreshold, _validatorThreshold)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Receiver{ReceiverCaller: ReceiverCaller{contract: contract}, ReceiverTransactor: ReceiverTransactor{contract: contract}, ReceiverFilterer: ReceiverFilterer{contract: contract}}, nil
}

// Receiver is an auto generated Go binding around an Ethereum contract.
type Receiver struct {
	ReceiverCaller     // Read-only binding to the contract
	ReceiverTransactor // Write-only binding to the contract
	ReceiverFilterer   // Log filterer for contract events
}

// ReceiverCaller is an auto generated read-only Go binding around an Ethereum contract.
type ReceiverCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ReceiverTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ReceiverTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ReceiverFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ReceiverFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ReceiverSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ReceiverSession struct {
	Contract     *Receiver         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ReceiverCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ReceiverCallerSession struct {
	Contract *ReceiverCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ReceiverTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ReceiverTransactorSession struct {
	Contract     *ReceiverTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ReceiverRaw is an auto generated low-level Go binding around an Ethereum contract.
type ReceiverRaw struct {
	Contract *Receiver // Generic contract binding to access the raw methods on
}

// ReceiverCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ReceiverCallerRaw struct {
	Contract *ReceiverCaller // Generic read-only contract binding to access the raw methods on
}

// ReceiverTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ReceiverTransactorRaw struct {
	Contract *ReceiverTransactor // Generic write-only contract binding to access the raw methods on
}

// NewReceiver creates a new instance of Receiver, bound to a specific deployed contract.
func NewReceiver(address common.Address, backend bind.ContractBackend) (*Receiver, error) {
	contract, err := bindReceiver(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Receiver{ReceiverCaller: ReceiverCaller{contract: contract}, ReceiverTransactor: ReceiverTransactor{contract: contract}, ReceiverFilterer: ReceiverFilterer{contract: contract}}, nil
}

// NewReceiverCaller creates a new read-only instance of Receiver, bound to a specific deployed contract.
func NewReceiverCaller(address common.Address, caller bind.ContractCaller) (*ReceiverCaller, error) {
	contract, err := bindReceiver(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ReceiverCaller{contract: contract}, nil
}

// NewReceiverTransactor creates a new write-only instance of Receiver, bound to a specific deployed contract.
func NewReceiverTransactor(address common.Address, transactor bind.ContractTransactor) (*ReceiverTransactor, error) {
	contract, err := bindReceiver(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ReceiverTransactor{contract: contract}, nil
}

// NewReceiverFilterer creates a new log filterer instance of Receiver, bound to a specific deployed contract.
func NewReceiverFilterer(address common.Address, filterer bind.ContractFilterer) (*ReceiverFilterer, error) {
	contract, err := bindReceiver(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ReceiverFilterer{contract: contract}, nil
}

// bindReceiver binds a generic wrapper to an already deployed contract.
func bindReceiver(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ReceiverABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Receiver *ReceiverRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Receiver.Contract.ReceiverCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Receiver *ReceiverRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Receiver.Contract.ReceiverTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Receiver *ReceiverRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Receiver.Contract.ReceiverTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Receiver *ReceiverCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Receiver.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Receiver *ReceiverTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Receiver.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Receiver *ReceiverTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Receiver.Contract.contract.Transact(opts, method, params...)
}

// DepositProposals is a free data retrieval call binding the contract method 0x8a045911.
//
// Solidity: function DepositProposals( uint256,  uint256) constant returns(hash bytes32, id uint256, originChain uint256, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverCaller) DepositProposals(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	ret := new(struct {
		Hash        [32]byte
		Id          *big.Int
		OriginChain *big.Int
		NumYes      *big.Int
		NumNo       *big.Int
		Status      uint8
	})
	out := ret
	err := _Receiver.contract.Call(opts, out, "DepositProposals", arg0, arg1)
	return *ret, err
}

// DepositProposals is a free data retrieval call binding the contract method 0x8a045911.
//
// Solidity: function DepositProposals( uint256,  uint256) constant returns(hash bytes32, id uint256, originChain uint256, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverSession) DepositProposals(arg0 *big.Int, arg1 *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	return _Receiver.Contract.DepositProposals(&_Receiver.CallOpts, arg0, arg1)
}

// DepositProposals is a free data retrieval call binding the contract method 0x8a045911.
//
// Solidity: function DepositProposals( uint256,  uint256) constant returns(hash bytes32, id uint256, originChain uint256, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverCallerSession) DepositProposals(arg0 *big.Int, arg1 *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	return _Receiver.Contract.DepositProposals(&_Receiver.CallOpts, arg0, arg1)
}

// DepositThreshold is a free data retrieval call binding the contract method 0x1e43698c.
//
// Solidity: function DepositThreshold() constant returns(uint256)
func (_Receiver *ReceiverCaller) DepositThreshold(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Receiver.contract.Call(opts, out, "DepositThreshold")
	return *ret0, err
}

// DepositThreshold is a free data retrieval call binding the contract method 0x1e43698c.
//
// Solidity: function DepositThreshold() constant returns(uint256)
func (_Receiver *ReceiverSession) DepositThreshold() (*big.Int, error) {
	return _Receiver.Contract.DepositThreshold(&_Receiver.CallOpts)
}

// DepositThreshold is a free data retrieval call binding the contract method 0x1e43698c.
//
// Solidity: function DepositThreshold() constant returns(uint256)
func (_Receiver *ReceiverCallerSession) DepositThreshold() (*big.Int, error) {
	return _Receiver.Contract.DepositThreshold(&_Receiver.CallOpts)
}

// ThresholdProposals is a free data retrieval call binding the contract method 0x95531e47.
//
// Solidity: function ThresholdProposals( uint256) constant returns(newValue uint256, proposalType uint8, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverCaller) ThresholdProposals(opts *bind.CallOpts, arg0 *big.Int) (struct {
	NewValue     *big.Int
	ProposalType uint8
	NumYes       *big.Int
	NumNo        *big.Int
	Status       uint8
}, error) {
	ret := new(struct {
		NewValue     *big.Int
		ProposalType uint8
		NumYes       *big.Int
		NumNo        *big.Int
		Status       uint8
	})
	out := ret
	err := _Receiver.contract.Call(opts, out, "ThresholdProposals", arg0)
	return *ret, err
}

// ThresholdProposals is a free data retrieval call binding the contract method 0x95531e47.
//
// Solidity: function ThresholdProposals( uint256) constant returns(newValue uint256, proposalType uint8, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverSession) ThresholdProposals(arg0 *big.Int) (struct {
	NewValue     *big.Int
	ProposalType uint8
	NumYes       *big.Int
	NumNo        *big.Int
	Status       uint8
}, error) {
	return _Receiver.Contract.ThresholdProposals(&_Receiver.CallOpts, arg0)
}

// ThresholdProposals is a free data retrieval call binding the contract method 0x95531e47.
//
// Solidity: function ThresholdProposals( uint256) constant returns(newValue uint256, proposalType uint8, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverCallerSession) ThresholdProposals(arg0 *big.Int) (struct {
	NewValue     *big.Int
	ProposalType uint8
	NumYes       *big.Int
	NumNo        *big.Int
	Status       uint8
}, error) {
	return _Receiver.Contract.ThresholdProposals(&_Receiver.CallOpts, arg0)
}

// TotalValidators is a free data retrieval call binding the contract method 0x60e4f8ab.
//
// Solidity: function TotalValidators() constant returns(uint256)
func (_Receiver *ReceiverCaller) TotalValidators(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Receiver.contract.Call(opts, out, "TotalValidators")
	return *ret0, err
}

// TotalValidators is a free data retrieval call binding the contract method 0x60e4f8ab.
//
// Solidity: function TotalValidators() constant returns(uint256)
func (_Receiver *ReceiverSession) TotalValidators() (*big.Int, error) {
	return _Receiver.Contract.TotalValidators(&_Receiver.CallOpts)
}

// TotalValidators is a free data retrieval call binding the contract method 0x60e4f8ab.
//
// Solidity: function TotalValidators() constant returns(uint256)
func (_Receiver *ReceiverCallerSession) TotalValidators() (*big.Int, error) {
	return _Receiver.Contract.TotalValidators(&_Receiver.CallOpts)
}

// ValidatorProposals is a free data retrieval call binding the contract method 0x23589e81.
//
// Solidity: function ValidatorProposals( address) constant returns(validator address, action uint8, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverCaller) ValidatorProposals(opts *bind.CallOpts, arg0 common.Address) (struct {
	Validator common.Address
	Action    uint8
	NumYes    *big.Int
	NumNo     *big.Int
	Status    uint8
}, error) {
	ret := new(struct {
		Validator common.Address
		Action    uint8
		NumYes    *big.Int
		NumNo     *big.Int
		Status    uint8
	})
	out := ret
	err := _Receiver.contract.Call(opts, out, "ValidatorProposals", arg0)
	return *ret, err
}

// ValidatorProposals is a free data retrieval call binding the contract method 0x23589e81.
//
// Solidity: function ValidatorProposals( address) constant returns(validator address, action uint8, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverSession) ValidatorProposals(arg0 common.Address) (struct {
	Validator common.Address
	Action    uint8
	NumYes    *big.Int
	NumNo     *big.Int
	Status    uint8
}, error) {
	return _Receiver.Contract.ValidatorProposals(&_Receiver.CallOpts, arg0)
}

// ValidatorProposals is a free data retrieval call binding the contract method 0x23589e81.
//
// Solidity: function ValidatorProposals( address) constant returns(validator address, action uint8, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverCallerSession) ValidatorProposals(arg0 common.Address) (struct {
	Validator common.Address
	Action    uint8
	NumYes    *big.Int
	NumNo     *big.Int
	Status    uint8
}, error) {
	return _Receiver.Contract.ValidatorProposals(&_Receiver.CallOpts, arg0)
}

// ValidatorThreshold is a free data retrieval call binding the contract method 0x50d68ed8.
//
// Solidity: function ValidatorThreshold() constant returns(uint256)
func (_Receiver *ReceiverCaller) ValidatorThreshold(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Receiver.contract.Call(opts, out, "ValidatorThreshold")
	return *ret0, err
}

// ValidatorThreshold is a free data retrieval call binding the contract method 0x50d68ed8.
//
// Solidity: function ValidatorThreshold() constant returns(uint256)
func (_Receiver *ReceiverSession) ValidatorThreshold() (*big.Int, error) {
	return _Receiver.Contract.ValidatorThreshold(&_Receiver.CallOpts)
}

// ValidatorThreshold is a free data retrieval call binding the contract method 0x50d68ed8.
//
// Solidity: function ValidatorThreshold() constant returns(uint256)
func (_Receiver *ReceiverCallerSession) ValidatorThreshold() (*big.Int, error) {
	return _Receiver.Contract.ValidatorThreshold(&_Receiver.CallOpts)
}

// Validators is a free data retrieval call binding the contract method 0x277ae8dd.
//
// Solidity: function Validators( address) constant returns(bool)
func (_Receiver *ReceiverCaller) Validators(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Receiver.contract.Call(opts, out, "Validators", arg0)
	return *ret0, err
}

// Validators is a free data retrieval call binding the contract method 0x277ae8dd.
//
// Solidity: function Validators( address) constant returns(bool)
func (_Receiver *ReceiverSession) Validators(arg0 common.Address) (bool, error) {
	return _Receiver.Contract.Validators(&_Receiver.CallOpts, arg0)
}

// Validators is a free data retrieval call binding the contract method 0x277ae8dd.
//
// Solidity: function Validators( address) constant returns(bool)
func (_Receiver *ReceiverCallerSession) Validators(arg0 common.Address) (bool, error) {
	return _Receiver.Contract.Validators(&_Receiver.CallOpts, arg0)
}

// GetDepositProposal is a free data retrieval call binding the contract method 0xcb4815e0.
//
// Solidity: function getDepositProposal(_chainId uint256, _depositId uint256) constant returns(hash bytes32, id uint256, originChain uint256, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverCaller) GetDepositProposal(opts *bind.CallOpts, _chainId *big.Int, _depositId *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	ret := new(struct {
		Hash        [32]byte
		Id          *big.Int
		OriginChain *big.Int
		NumYes      *big.Int
		NumNo       *big.Int
		Status      uint8
	})
	out := ret
	err := _Receiver.contract.Call(opts, out, "getDepositProposal", _chainId, _depositId)
	return *ret, err
}

// GetDepositProposal is a free data retrieval call binding the contract method 0xcb4815e0.
//
// Solidity: function getDepositProposal(_chainId uint256, _depositId uint256) constant returns(hash bytes32, id uint256, originChain uint256, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverSession) GetDepositProposal(_chainId *big.Int, _depositId *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	return _Receiver.Contract.GetDepositProposal(&_Receiver.CallOpts, _chainId, _depositId)
}

// GetDepositProposal is a free data retrieval call binding the contract method 0xcb4815e0.
//
// Solidity: function getDepositProposal(_chainId uint256, _depositId uint256) constant returns(hash bytes32, id uint256, originChain uint256, numYes uint256, numNo uint256, status uint8)
func (_Receiver *ReceiverCallerSession) GetDepositProposal(_chainId *big.Int, _depositId *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	return _Receiver.Contract.GetDepositProposal(&_Receiver.CallOpts, _chainId, _depositId)
}

// CreateDepositProposal is a paid mutator transaction binding the contract method 0x2bfd6d08.
//
// Solidity: function createDepositProposal(_hash bytes32, _depositId uint256, _originChain uint256) returns()
func (_Receiver *ReceiverTransactor) CreateDepositProposal(opts *bind.TransactOpts, _hash [32]byte, _depositId *big.Int, _originChain *big.Int) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "createDepositProposal", _hash, _depositId, _originChain)
}

// CreateDepositProposal is a paid mutator transaction binding the contract method 0x2bfd6d08.
//
// Solidity: function createDepositProposal(_hash bytes32, _depositId uint256, _originChain uint256) returns()
func (_Receiver *ReceiverSession) CreateDepositProposal(_hash [32]byte, _depositId *big.Int, _originChain *big.Int) (*types.Transaction, error) {
	return _Receiver.Contract.CreateDepositProposal(&_Receiver.TransactOpts, _hash, _depositId, _originChain)
}

// CreateDepositProposal is a paid mutator transaction binding the contract method 0x2bfd6d08.
//
// Solidity: function createDepositProposal(_hash bytes32, _depositId uint256, _originChain uint256) returns()
func (_Receiver *ReceiverTransactorSession) CreateDepositProposal(_hash [32]byte, _depositId *big.Int, _originChain *big.Int) (*types.Transaction, error) {
	return _Receiver.Contract.CreateDepositProposal(&_Receiver.TransactOpts, _hash, _depositId, _originChain)
}

// CreateThresholdProposal is a paid mutator transaction binding the contract method 0xb3225369.
//
// Solidity: function createThresholdProposal(_value uint256, _type uint8) returns()
func (_Receiver *ReceiverTransactor) CreateThresholdProposal(opts *bind.TransactOpts, _value *big.Int, _type uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "createThresholdProposal", _value, _type)
}

// CreateThresholdProposal is a paid mutator transaction binding the contract method 0xb3225369.
//
// Solidity: function createThresholdProposal(_value uint256, _type uint8) returns()
func (_Receiver *ReceiverSession) CreateThresholdProposal(_value *big.Int, _type uint8) (*types.Transaction, error) {
	return _Receiver.Contract.CreateThresholdProposal(&_Receiver.TransactOpts, _value, _type)
}

// CreateThresholdProposal is a paid mutator transaction binding the contract method 0xb3225369.
//
// Solidity: function createThresholdProposal(_value uint256, _type uint8) returns()
func (_Receiver *ReceiverTransactorSession) CreateThresholdProposal(_value *big.Int, _type uint8) (*types.Transaction, error) {
	return _Receiver.Contract.CreateThresholdProposal(&_Receiver.TransactOpts, _value, _type)
}

// CreateValidatorProposal is a paid mutator transaction binding the contract method 0x331ba913.
//
// Solidity: function createValidatorProposal(_addr address, _action uint8) returns()
func (_Receiver *ReceiverTransactor) CreateValidatorProposal(opts *bind.TransactOpts, _addr common.Address, _action uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "createValidatorProposal", _addr, _action)
}

// CreateValidatorProposal is a paid mutator transaction binding the contract method 0x331ba913.
//
// Solidity: function createValidatorProposal(_addr address, _action uint8) returns()
func (_Receiver *ReceiverSession) CreateValidatorProposal(_addr common.Address, _action uint8) (*types.Transaction, error) {
	return _Receiver.Contract.CreateValidatorProposal(&_Receiver.TransactOpts, _addr, _action)
}

// CreateValidatorProposal is a paid mutator transaction binding the contract method 0x331ba913.
//
// Solidity: function createValidatorProposal(_addr address, _action uint8) returns()
func (_Receiver *ReceiverTransactorSession) CreateValidatorProposal(_addr common.Address, _action uint8) (*types.Transaction, error) {
	return _Receiver.Contract.CreateValidatorProposal(&_Receiver.TransactOpts, _addr, _action)
}

// ExecuteDeposit is a paid mutator transaction binding the contract method 0x9bf48642.
//
// Solidity: function executeDeposit(_originChainId uint256, _depositId uint256, _to address, _data bytes) returns()
func (_Receiver *ReceiverTransactor) ExecuteDeposit(opts *bind.TransactOpts, _originChainId *big.Int, _depositId *big.Int, _to common.Address, _data []byte) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "executeDeposit", _originChainId, _depositId, _to, _data)
}

// ExecuteDeposit is a paid mutator transaction binding the contract method 0x9bf48642.
//
// Solidity: function executeDeposit(_originChainId uint256, _depositId uint256, _to address, _data bytes) returns()
func (_Receiver *ReceiverSession) ExecuteDeposit(_originChainId *big.Int, _depositId *big.Int, _to common.Address, _data []byte) (*types.Transaction, error) {
	return _Receiver.Contract.ExecuteDeposit(&_Receiver.TransactOpts, _originChainId, _depositId, _to, _data)
}

// ExecuteDeposit is a paid mutator transaction binding the contract method 0x9bf48642.
//
// Solidity: function executeDeposit(_originChainId uint256, _depositId uint256, _to address, _data bytes) returns()
func (_Receiver *ReceiverTransactorSession) ExecuteDeposit(_originChainId *big.Int, _depositId *big.Int, _to common.Address, _data []byte) (*types.Transaction, error) {
	return _Receiver.Contract.ExecuteDeposit(&_Receiver.TransactOpts, _originChainId, _depositId, _to, _data)
}

// VoteDepositProposal is a paid mutator transaction binding the contract method 0xe7d3696c.
//
// Solidity: function voteDepositProposal(_originChainId uint256, _depositId uint256, _vote uint8) returns()
func (_Receiver *ReceiverTransactor) VoteDepositProposal(opts *bind.TransactOpts, _originChainId *big.Int, _depositId *big.Int, _vote uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "voteDepositProposal", _originChainId, _depositId, _vote)
}

// VoteDepositProposal is a paid mutator transaction binding the contract method 0xe7d3696c.
//
// Solidity: function voteDepositProposal(_originChainId uint256, _depositId uint256, _vote uint8) returns()
func (_Receiver *ReceiverSession) VoteDepositProposal(_originChainId *big.Int, _depositId *big.Int, _vote uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteDepositProposal(&_Receiver.TransactOpts, _originChainId, _depositId, _vote)
}

// VoteDepositProposal is a paid mutator transaction binding the contract method 0xe7d3696c.
//
// Solidity: function voteDepositProposal(_originChainId uint256, _depositId uint256, _vote uint8) returns()
func (_Receiver *ReceiverTransactorSession) VoteDepositProposal(_originChainId *big.Int, _depositId *big.Int, _vote uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteDepositProposal(&_Receiver.TransactOpts, _originChainId, _depositId, _vote)
}

// VoteThresholdProposal is a paid mutator transaction binding the contract method 0xdcc2e4db.
//
// Solidity: function voteThresholdProposal(_vote uint8, _type uint8) returns()
func (_Receiver *ReceiverTransactor) VoteThresholdProposal(opts *bind.TransactOpts, _vote uint8, _type uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "voteThresholdProposal", _vote, _type)
}

// VoteThresholdProposal is a paid mutator transaction binding the contract method 0xdcc2e4db.
//
// Solidity: function voteThresholdProposal(_vote uint8, _type uint8) returns()
func (_Receiver *ReceiverSession) VoteThresholdProposal(_vote uint8, _type uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteThresholdProposal(&_Receiver.TransactOpts, _vote, _type)
}

// VoteThresholdProposal is a paid mutator transaction binding the contract method 0xdcc2e4db.
//
// Solidity: function voteThresholdProposal(_vote uint8, _type uint8) returns()
func (_Receiver *ReceiverTransactorSession) VoteThresholdProposal(_vote uint8, _type uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteThresholdProposal(&_Receiver.TransactOpts, _vote, _type)
}

// VoteValidatorProposal is a paid mutator transaction binding the contract method 0x62e73263.
//
// Solidity: function voteValidatorProposal(_addr address, _vote uint8) returns()
func (_Receiver *ReceiverTransactor) VoteValidatorProposal(opts *bind.TransactOpts, _addr common.Address, _vote uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "voteValidatorProposal", _addr, _vote)
}

// VoteValidatorProposal is a paid mutator transaction binding the contract method 0x62e73263.
//
// Solidity: function voteValidatorProposal(_addr address, _vote uint8) returns()
func (_Receiver *ReceiverSession) VoteValidatorProposal(_addr common.Address, _vote uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteValidatorProposal(&_Receiver.TransactOpts, _addr, _vote)
}

// VoteValidatorProposal is a paid mutator transaction binding the contract method 0x62e73263.
//
// Solidity: function voteValidatorProposal(_addr address, _vote uint8) returns()
func (_Receiver *ReceiverTransactorSession) VoteValidatorProposal(_addr common.Address, _vote uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteValidatorProposal(&_Receiver.TransactOpts, _addr, _vote)
}

// ReceiverDepositExecutedIterator is returned from FilterDepositExecuted and is used to iterate over the raw logs and unpacked data for DepositExecuted events raised by the Receiver contract.
type ReceiverDepositExecutedIterator struct {
	Event *ReceiverDepositExecuted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ReceiverDepositExecutedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ReceiverDepositExecuted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ReceiverDepositExecuted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ReceiverDepositExecutedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ReceiverDepositExecutedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ReceiverDepositExecuted represents a DepositExecuted event raised by the Receiver contract.
type ReceiverDepositExecuted struct {
	OriginChainId *big.Int
	DepositId     *big.Int
	To            common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterDepositExecuted is a free log retrieval operation binding the contract event 0x27d38e802660c3b01a484e1e1928270cd6325dd105c1fe943e7e8c71346ec367.
//
// Solidity: e DepositExecuted(_originChainId uint256, _depositId uint256, _to address)
func (_Receiver *ReceiverFilterer) FilterDepositExecuted(opts *bind.FilterOpts) (*ReceiverDepositExecutedIterator, error) {

	logs, sub, err := _Receiver.contract.FilterLogs(opts, "DepositExecuted")
	if err != nil {
		return nil, err
	}
	return &ReceiverDepositExecutedIterator{contract: _Receiver.contract, event: "DepositExecuted", logs: logs, sub: sub}, nil
}

// WatchDepositExecuted is a free log subscription operation binding the contract event 0x27d38e802660c3b01a484e1e1928270cd6325dd105c1fe943e7e8c71346ec367.
//
// Solidity: e DepositExecuted(_originChainId uint256, _depositId uint256, _to address)
func (_Receiver *ReceiverFilterer) WatchDepositExecuted(opts *bind.WatchOpts, sink chan<- *ReceiverDepositExecuted) (event.Subscription, error) {

	logs, sub, err := _Receiver.contract.WatchLogs(opts, "DepositExecuted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ReceiverDepositExecuted)
				if err := _Receiver.contract.UnpackLog(event, "DepositExecuted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ReceiverDepositProposalCreatedIterator is returned from FilterDepositProposalCreated and is used to iterate over the raw logs and unpacked data for DepositProposalCreated events raised by the Receiver contract.
type ReceiverDepositProposalCreatedIterator struct {
	Event *ReceiverDepositProposalCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ReceiverDepositProposalCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ReceiverDepositProposalCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ReceiverDepositProposalCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ReceiverDepositProposalCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ReceiverDepositProposalCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ReceiverDepositProposalCreated represents a DepositProposalCreated event raised by the Receiver contract.
type ReceiverDepositProposalCreated struct {
	Hash        [32]byte
	DepositId   *big.Int
	OriginChain *big.Int
	VoteStatus  uint8
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterDepositProposalCreated is a free log retrieval operation binding the contract event 0xa3c54ef04177bc4ee7cfc4f38715fd8ea57d3684f5c1dab61c4c7a50cd1c207a.
//
// Solidity: e DepositProposalCreated(_hash bytes32, _depositId uint256, _originChain uint256, _voteStatus uint8)
func (_Receiver *ReceiverFilterer) FilterDepositProposalCreated(opts *bind.FilterOpts) (*ReceiverDepositProposalCreatedIterator, error) {

	logs, sub, err := _Receiver.contract.FilterLogs(opts, "DepositProposalCreated")
	if err != nil {
		return nil, err
	}
	return &ReceiverDepositProposalCreatedIterator{contract: _Receiver.contract, event: "DepositProposalCreated", logs: logs, sub: sub}, nil
}

// WatchDepositProposalCreated is a free log subscription operation binding the contract event 0xa3c54ef04177bc4ee7cfc4f38715fd8ea57d3684f5c1dab61c4c7a50cd1c207a.
//
// Solidity: e DepositProposalCreated(_hash bytes32, _depositId uint256, _originChain uint256, _voteStatus uint8)
func (_Receiver *ReceiverFilterer) WatchDepositProposalCreated(opts *bind.WatchOpts, sink chan<- *ReceiverDepositProposalCreated) (event.Subscription, error) {

	logs, sub, err := _Receiver.contract.WatchLogs(opts, "DepositProposalCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ReceiverDepositProposalCreated)
				if err := _Receiver.contract.UnpackLog(event, "DepositProposalCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ReceiverDepositProposalVoteIterator is returned from FilterDepositProposalVote and is used to iterate over the raw logs and unpacked data for DepositProposalVote events raised by the Receiver contract.
type ReceiverDepositProposalVoteIterator struct {
	Event *ReceiverDepositProposalVote // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ReceiverDepositProposalVoteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ReceiverDepositProposalVote)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ReceiverDepositProposalVote)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ReceiverDepositProposalVoteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ReceiverDepositProposalVoteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ReceiverDepositProposalVote represents a DepositProposalVote event raised by the Receiver contract.
type ReceiverDepositProposalVote struct {
	OriginChainId *big.Int
	DepositId     *big.Int
	Vote          uint8
	VoteStatus    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterDepositProposalVote is a free log retrieval operation binding the contract event 0x40fc0ff8dcb86fbd4d70d3e1237dbd6dab58a03c8a1a3af7b27a4f70b540a66b.
//
// Solidity: e DepositProposalVote(_originChainId uint256, _depositId uint256, _vote uint8, _voteStatus uint8)
func (_Receiver *ReceiverFilterer) FilterDepositProposalVote(opts *bind.FilterOpts) (*ReceiverDepositProposalVoteIterator, error) {

	logs, sub, err := _Receiver.contract.FilterLogs(opts, "DepositProposalVote")
	if err != nil {
		return nil, err
	}
	return &ReceiverDepositProposalVoteIterator{contract: _Receiver.contract, event: "DepositProposalVote", logs: logs, sub: sub}, nil
}

// WatchDepositProposalVote is a free log subscription operation binding the contract event 0x40fc0ff8dcb86fbd4d70d3e1237dbd6dab58a03c8a1a3af7b27a4f70b540a66b.
//
// Solidity: e DepositProposalVote(_originChainId uint256, _depositId uint256, _vote uint8, _voteStatus uint8)
func (_Receiver *ReceiverFilterer) WatchDepositProposalVote(opts *bind.WatchOpts, sink chan<- *ReceiverDepositProposalVote) (event.Subscription, error) {

	logs, sub, err := _Receiver.contract.WatchLogs(opts, "DepositProposalVote")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ReceiverDepositProposalVote)
				if err := _Receiver.contract.UnpackLog(event, "DepositProposalVote", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
