// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package Receiver

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ReceiverABI is the input ABI used to generate the binding from.
const ReceiverABI = "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_depositThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_validatorThreshold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_originChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"DepositExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_originChain\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"_voteStatus\",\"type\":\"uint8\"}],\"name\":\"DepositProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_originChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enumReceiver.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"_voteStatus\",\"type\":\"uint8\"}],\"name\":\"DepositProposalVote\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"DepositProposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numNo\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DepositThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ThresholdProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.ThresholdType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numNo\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ValidatorProposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"enumReceiver.ValidatorActionType\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numNo\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ValidatorThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Validators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_originChain\",\"type\":\"uint256\"}],\"name\":\"createDepositProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"}],\"name\":\"voteDepositProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"executeDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"enumReceiver.ValidatorActionType\",\"name\":\"_action\",\"type\":\"uint8\"}],\"name\":\"createValidatorProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"enumReceiver.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"}],\"name\":\"voteValidatorProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.ThresholdType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"createThresholdProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"enumReceiver.Vote\",\"name\":\"_vote\",\"type\":\"uint8\"},{\"internalType\":\"enumReceiver.ThresholdType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"voteThresholdProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"getDepositProposal\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numNo\",\"type\":\"uint256\"},{\"internalType\":\"enumReceiver.VoteStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// ReceiverBin is the compiled bytecode used for deploying new contracts.
var ReceiverBin = "0x60806040523480156200001157600080fd5b506040516200316238038062003162833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660208202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000c6578082015181840152602081019050620000a9565b5050505090500160405260200180519060200190929190805190602001909291905050506000821162000145576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806200310e6029913960400191505060405180910390fd5b60008111620001a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018062003137602b913960400191505060405180910390fd5b60008090505b83518110156200022a57600160026000868481518110620001c357fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080600101915050620001a6565b5082516003819055508160008190555080600181905550505050612eba80620002546000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806362e7326311610097578063b322536911610066578063b322536914610536578063cb4815e014610571578063dcc2e4db146105ee578063e7d3696c1461062c576100f5565b806362e73263146102ff5780638a0459111461035057806395531e47146103cd5780639bf4864214610447576100f5565b80632bfd6d08116100d35780632bfd6d0814610230578063331ba9131461027257806350d68ed8146102c357806360e4f8ab146102e1576100f5565b80631e43698c146100fa57806323589e8114610118578063277ae8dd146101d4575b600080fd5b610102610671565b6040518082815260200191505060405180910390f35b61015a6004803603602081101561012e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610677565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600181111561019c57fe5b60ff1681526020018481526020018381526020018260038111156101bc57fe5b60ff1681526020019550505050505060405180910390f35b610216600480360360208110156101ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106e7565b604051808215151515815260200191505060405180910390f35b6102706004803603606081101561024657600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610707565b005b6102c16004803603604081101561028857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610b24565b005b6102cb611356565b6040518082815260200191505060405180910390f35b6102e961135c565b6040518082815260200191505060405180910390f35b61034e6004803603604081101561031557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050611362565b005b6103866004803603604081101561036657600080fd5b810190808035906020019092919080359060200190929190505050611b22565b604051808781526020018681526020018581526020018481526020018381526020018260038111156103b457fe5b60ff168152602001965050505050505060405180910390f35b6103f9600480360360208110156103e357600080fd5b8101908080359060200190929190505050611b78565b6040518086815260200185600181111561040f57fe5b60ff16815260200184815260200183815260200182600381111561042f57fe5b60ff1681526020019550505050505060405180910390f35b6105346004803603608081101561045d57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104ae57600080fd5b8201836020820111156104c057600080fd5b803590602001918460018302840111640100000000831117156104e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bc8565b005b61056f6004803603604081101561054c57600080fd5b8101908080359060200190929190803560ff169060200190929190505050611f2a565b005b6105a76004803603604081101561058757600080fd5b81019080803590602001909291908035906020019092919050505061223b565b604051808781526020018681526020018581526020018481526020018381526020018260038111156105d557fe5b60ff168152602001965050505050505060405180910390f35b61062a6004803603604081101561060457600080fd5b81019080803560ff169060200190929190803560ff169060200190929190505050612311565b005b61066f6004803603606081101561064257600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050612797565b005b60005481565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060020154908060030154908060040160009054906101000a900460ff16905085565b60026020528060005260406000206000915054906101000a900460ff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081525060200191505060405180910390fd5b600060038111156107d357fe5b60066000838152602001908152602001600020600084815260200190815260200160002060060160009054906101000a900460ff16600381111561081357fe5b14610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f412070726f706f73616c20616c7265616479206578697374732100000000000081525060200191505060405180910390fd5b60016000541415610953576040518060c001604052808481526020018381526020018281526020016001815260200160008152602001600260038111156108c957fe5b815250600660008381526020019081526020016000206000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600401556080820151816005015560a08201518160060160006101000a81548160ff0219169083600381111561094657fe5b0217905550905050610a11565b6040518060c0016040528084815260200183815260200182815260200160018152602001600081526020016001600381111561098b57fe5b815250600660008381526020019081526020016000206000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600401556080820151816005015560a08201518160060160006101000a81548160ff02191690836003811115610a0857fe5b02179055509050505b600160066000838152602001908152602001600020600084815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa3c54ef04177bc4ee7cfc4f38715fd8ea57d3684f5c1dab61c4c7a50cd1c207a83838360066000868152602001908152602001600020600087815260200190815260200160002060060160009054906101000a900460ff1660405180858152602001848152602001838152602001826003811115610b0957fe5b60ff16815260200194505050505060405180910390a1505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610be3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081525060200191505060405180910390fd5b6001816001811115610bf157fe5b1115610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612e106022913960400191505060405180910390fd5b600180811115610c5457fe5b816001811115610c6057fe5b148015610cbd575060001515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b15610d30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f56616c696461746f72206973206e6f742061637469766521000000000000000081525060200191505060405180910390fd5b60006001811115610d3d57fe5b816001811115610d4957fe5b148015610da6575060011515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b15610e19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f56616c696461746f7220697320616c726561647920616374697665210000000081525060200191505060405180910390fd5b60006003811115610e2657fe5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff166003811115610e8157fe5b14610ed7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612dec6024913960400191505060405180910390fd5b600180541415611174576040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001826001811115610f1457fe5b8152602001600181526020016000815260200160006003811115610f3457fe5b815250600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115610fe157fe5b0217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600381111561101e57fe5b02179055509050506000600181111561103357fe5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16600181111561108e57fe5b1415611103576001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060036000815480929190600101919050555061116f565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360008154809291906001900391905055505b6112ba565b6040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018260018111156111a757fe5b81526020016001815260200160008152602001600160038111156111c757fe5b815250600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083600181111561127457fe5b0217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908360038111156112b157fe5b02179055509050505b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60015481565b60035481565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081525060200191505060405180910390fd5b6000600381111561142e57fe5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16600381111561148957fe5b14156114fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468657265206973206e6f206163746976652070726f706f73616c210000000081525060200191505060405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156115fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f56616c696461746f722068617320616c726561647920766f746564210000000081525060200191505060405180910390fd5b600181600181111561160b57fe5b111561167f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f566f7465206f7574206f662074686520766f746520656e756d2072616e67652181525060200191505060405180910390fd5b6000600181111561168c57fe5b81600181111561169857fe5b14156116f557600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008154809291906001019190505550611748565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600081548092919060010191905055505b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600154600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015410158061187a5750600154600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015460035403105b15611b1e57600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541115611b1d576000600181111561191857fe5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16600181111561197357fe5b1415611a4c576001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003600081548092919060010191905055506000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff02191690836003811115611a4257fe5b0217905550611b1c565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600360008154809291906001900391905055506000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff02191690836003811115611b1657fe5b02179055505b5b5b5050565b6006602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060040154908060050154908060060160009054906101000a900460ff16905086565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060030154908060040154908060050160009054906101000a900460ff16905085565b6000600660008681526020019081526020016000206000858152602001908152602001600020905060026003811115611bfd57fe5b8160060160009054906101000a900460ff166003811115611c1a57fe5b14611c8d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f566f746520686173206e6f742066696e616c697a65642100000000000000000081525060200191505060405180910390fd5b60005481600401541015611d09576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f566f746520686173206e6f74207061737365642100000000000000000000000081525060200191505060405180910390fd5b8060000154828051906020012014611d89576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f496e636f7272656374206461746120737570706c69656420666f72206861736881525060200191505060405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff16635dcd653687856040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611e01578082015181840152602081019050611de6565b50505050905090810190601f168015611e2e5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015611e4e57600080fd5b505af1158015611e62573d6000803e3d6000fd5b50505050600360066000888152602001908152602001600020600087815260200190815260200160002060060160006101000a81548160ff02191690836003811115611eaa57fe5b02179055507f27d38e802660c3b01a484e1e1928270cd6325dd105c1fe943e7e8c71346ec367868686604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611fe9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081525060200191505060405180910390fd5b6000816001811115611ff757fe5b9050600354831115612054576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612e326030913960400191505060405180910390fd5b6001600381111561206157fe5b6004600083815260200190815260200160002060050160009054906101000a900460ff16600381111561209057fe5b1415612104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f412070726f706f73616c2069732061637469766521000000000000000000000081525060200191505060405180910390fd5b6040518060a0016040528084815260200183600181111561212157fe5b815260200160018152602001600081526020016001600381111561214157fe5b815250600460008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600181111561218557fe5b0217905550604082015181600301556060820151816004015560808201518160050160006101000a81548160ff021916908360038111156121c257fe5b021790555090505060016004600083815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60008060008060008061224c612da7565b600660008a815260200190815260200160002060008981526020019081526020016000206040518060c001604052908160008201548152602001600182015481526020016002820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660038111156122cb57fe5b60038111156122d657fe5b815250509050806000015181602001518260400151836060015184608001518560a00151965096509650965096509650509295509295509295565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166123d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081525060200191505060405180910390fd5b60008160018111156123de57fe5b9050600160038111156123ed57fe5b6004600083815260200190815260200160002060050160009054906101000a900460ff16600381111561241c57fe5b1461248f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468657265206973206e6f206163746976652070726f706f73616c210000000081525060200191505060405180910390fd5b6004600082815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f56616c696461746f722068617320616c726561647920766f746564210000000081525060200191505060405180910390fd5b6000600181111561257057fe5b83600181111561257c57fe5b14156125ad5760046000828152602001908152602001600020600301600081548092919060010191905055506125f3565b6001808111156125b957fe5b8360018111156125c557fe5b14156125f25760046000828152602001908152602001600020600401600081548092919060010191905055505b5b60016004600083815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060015460046000838152602001908152602001600020600301541015806126a15750600154600460008381526020019081526020016000206004015460035403105b156127925760026004600083815260200190815260200160002060050160006101000a81548160ff021916908360038111156126d957fe5b0217905550600460008281526020019081526020016000206004015460046000838152602001908152602001600020600301541115612791576000600181111561271f57fe5b82600181111561272b57fe5b1415612753576004600082815260200190815260200160002060000154600181905550612790565b60018081111561275f57fe5b82600181111561276b57fe5b141561278f5760046000828152602001908152602001600020600001546000819055505b5b5b5b505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f53656e646572206973206e6f7420612076616c696461746f722e00000000000081525060200191505060405180910390fd5b6000600381111561286357fe5b60066000858152602001908152602001600020600084815260200190815260200160002060060160009054906101000a900460ff1660038111156128a357fe5b1415612917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468657265206973206e6f206163746976652070726f706f73616c210000000081525060200191505060405180910390fd5b6002600381111561292457fe5b60066000858152602001908152602001600020600084815260200190815260200160002060060160009054906101000a900460ff16600381111561296457fe5b106129ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e626024913960400191505060405180910390fd5b60066000848152602001908152602001600020600083815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612a9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f56616c696461746f722068617320616c726561647920766f746564210000000081525060200191505060405180910390fd5b6001816001811115612aad57fe5b1115612b21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f496e76616c696420766f7465210000000000000000000000000000000000000081525060200191505060405180910390fd5b60006001811115612b2e57fe5b816001811115612b3a57fe5b1415612b7c5760066000848152602001908152602001600020600083815260200190815260200160002060040160008154809291906001019190505550612bd3565b600180811115612b8857fe5b816001811115612b9457fe5b1415612bd257600660008481526020019081526020016000206000838152602001908152602001600020600501600081548092919060010191905055505b5b600160066000858152602001908152602001600020600084815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060005460066000858152602001908152602001600020600084815260200190815260200160002060040154101580612cb457506000546006600085815260200190815260200160002060008481526020019081526020016000206005015460035403105b15612d0357600260066000858152602001908152602001600020600084815260200190815260200160002060060160006101000a81548160ff02191690836003811115612cfd57fe5b02179055505b7f40fc0ff8dcb86fbd4d70d3e1237dbd6dab58a03c8a1a3af7b27a4f70b540a66b83838360066000888152602001908152602001600020600087815260200190815260200160002060060160009054906101000a900460ff1660405180858152602001848152602001836001811115612d7857fe5b60ff168152602001826003811115612d8c57fe5b60ff16815260200194505050505060405180910390a1505050565b6040518060c00160405280600080191681526020016000815260200160008152602001600081526020016000815260200160006003811115612de557fe5b8152509056fe546865726520697320616c726561647920616e206163746976652070726f706f73616c21416374696f6e206f7574206f662074686520766f746520656e756d2072616e676521546f74616c2076616c7565206d757374206265206c6f776572207468616e20746f74616c2056616c696461746f72732150726f706f73616c2068617320616c7265616479206265656e2066696e616c697a656421a265627a7a72315820c4b05430c1768a01dd33a091c383feac20d9545f6e2dd4e79bdc478f9238b65564736f6c634300051000324465706f736974207468726573686f6c64206d7573742062652067726561746572207468616e20302156616c696461746f72207468726573686f6c64206d7573742062652067726561746572207468616e203021"

// DeployReceiver deploys a new Ethereum contract, binding an instance of Receiver to it.
func DeployReceiver(auth *bind.TransactOpts, backend bind.ContractBackend, _addrs []common.Address, _depositThreshold *big.Int, _validatorThreshold *big.Int) (common.Address, *types.Transaction, *Receiver, error) {
	parsed, err := abi.JSON(strings.NewReader(ReceiverABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ReceiverBin), backend, _addrs, _depositThreshold, _validatorThreshold)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Receiver{ReceiverCaller: ReceiverCaller{contract: contract}, ReceiverTransactor: ReceiverTransactor{contract: contract}, ReceiverFilterer: ReceiverFilterer{contract: contract}}, nil
}

// Receiver is an auto generated Go binding around an Ethereum contract.
type Receiver struct {
	ReceiverCaller     // Read-only binding to the contract
	ReceiverTransactor // Write-only binding to the contract
	ReceiverFilterer   // Log filterer for contract events
}

// ReceiverCaller is an auto generated read-only Go binding around an Ethereum contract.
type ReceiverCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ReceiverTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ReceiverTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ReceiverFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ReceiverFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ReceiverSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ReceiverSession struct {
	Contract     *Receiver         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ReceiverCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ReceiverCallerSession struct {
	Contract *ReceiverCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ReceiverTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ReceiverTransactorSession struct {
	Contract     *ReceiverTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ReceiverRaw is an auto generated low-level Go binding around an Ethereum contract.
type ReceiverRaw struct {
	Contract *Receiver // Generic contract binding to access the raw methods on
}

// ReceiverCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ReceiverCallerRaw struct {
	Contract *ReceiverCaller // Generic read-only contract binding to access the raw methods on
}

// ReceiverTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ReceiverTransactorRaw struct {
	Contract *ReceiverTransactor // Generic write-only contract binding to access the raw methods on
}

// NewReceiver creates a new instance of Receiver, bound to a specific deployed contract.
func NewReceiver(address common.Address, backend bind.ContractBackend) (*Receiver, error) {
	contract, err := bindReceiver(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Receiver{ReceiverCaller: ReceiverCaller{contract: contract}, ReceiverTransactor: ReceiverTransactor{contract: contract}, ReceiverFilterer: ReceiverFilterer{contract: contract}}, nil
}

// NewReceiverCaller creates a new read-only instance of Receiver, bound to a specific deployed contract.
func NewReceiverCaller(address common.Address, caller bind.ContractCaller) (*ReceiverCaller, error) {
	contract, err := bindReceiver(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ReceiverCaller{contract: contract}, nil
}

// NewReceiverTransactor creates a new write-only instance of Receiver, bound to a specific deployed contract.
func NewReceiverTransactor(address common.Address, transactor bind.ContractTransactor) (*ReceiverTransactor, error) {
	contract, err := bindReceiver(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ReceiverTransactor{contract: contract}, nil
}

// NewReceiverFilterer creates a new log filterer instance of Receiver, bound to a specific deployed contract.
func NewReceiverFilterer(address common.Address, filterer bind.ContractFilterer) (*ReceiverFilterer, error) {
	contract, err := bindReceiver(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ReceiverFilterer{contract: contract}, nil
}

// bindReceiver binds a generic wrapper to an already deployed contract.
func bindReceiver(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ReceiverABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Receiver *ReceiverRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Receiver.Contract.ReceiverCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Receiver *ReceiverRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Receiver.Contract.ReceiverTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Receiver *ReceiverRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Receiver.Contract.ReceiverTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Receiver *ReceiverCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Receiver.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Receiver *ReceiverTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Receiver.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Receiver *ReceiverTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Receiver.Contract.contract.Transact(opts, method, params...)
}

// DepositProposals is a free data retrieval call binding the contract method 0x8a045911.
//
// Solidity: function DepositProposals(uint256 , uint256 ) constant returns(bytes32 hash, uint256 id, uint256 originChain, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverCaller) DepositProposals(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	ret := new(struct {
		Hash        [32]byte
		Id          *big.Int
		OriginChain *big.Int
		NumYes      *big.Int
		NumNo       *big.Int
		Status      uint8
	})
	out := ret
	err := _Receiver.contract.Call(opts, out, "DepositProposals", arg0, arg1)
	return *ret, err
}

// DepositProposals is a free data retrieval call binding the contract method 0x8a045911.
//
// Solidity: function DepositProposals(uint256 , uint256 ) constant returns(bytes32 hash, uint256 id, uint256 originChain, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverSession) DepositProposals(arg0 *big.Int, arg1 *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	return _Receiver.Contract.DepositProposals(&_Receiver.CallOpts, arg0, arg1)
}

// DepositProposals is a free data retrieval call binding the contract method 0x8a045911.
//
// Solidity: function DepositProposals(uint256 , uint256 ) constant returns(bytes32 hash, uint256 id, uint256 originChain, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverCallerSession) DepositProposals(arg0 *big.Int, arg1 *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	return _Receiver.Contract.DepositProposals(&_Receiver.CallOpts, arg0, arg1)
}

// DepositThreshold is a free data retrieval call binding the contract method 0x1e43698c.
//
// Solidity: function DepositThreshold() constant returns(uint256)
func (_Receiver *ReceiverCaller) DepositThreshold(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Receiver.contract.Call(opts, out, "DepositThreshold")
	return *ret0, err
}

// DepositThreshold is a free data retrieval call binding the contract method 0x1e43698c.
//
// Solidity: function DepositThreshold() constant returns(uint256)
func (_Receiver *ReceiverSession) DepositThreshold() (*big.Int, error) {
	return _Receiver.Contract.DepositThreshold(&_Receiver.CallOpts)
}

// DepositThreshold is a free data retrieval call binding the contract method 0x1e43698c.
//
// Solidity: function DepositThreshold() constant returns(uint256)
func (_Receiver *ReceiverCallerSession) DepositThreshold() (*big.Int, error) {
	return _Receiver.Contract.DepositThreshold(&_Receiver.CallOpts)
}

// ThresholdProposals is a free data retrieval call binding the contract method 0x95531e47.
//
// Solidity: function ThresholdProposals(uint256 ) constant returns(uint256 newValue, uint8 proposalType, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverCaller) ThresholdProposals(opts *bind.CallOpts, arg0 *big.Int) (struct {
	NewValue     *big.Int
	ProposalType uint8
	NumYes       *big.Int
	NumNo        *big.Int
	Status       uint8
}, error) {
	ret := new(struct {
		NewValue     *big.Int
		ProposalType uint8
		NumYes       *big.Int
		NumNo        *big.Int
		Status       uint8
	})
	out := ret
	err := _Receiver.contract.Call(opts, out, "ThresholdProposals", arg0)
	return *ret, err
}

// ThresholdProposals is a free data retrieval call binding the contract method 0x95531e47.
//
// Solidity: function ThresholdProposals(uint256 ) constant returns(uint256 newValue, uint8 proposalType, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverSession) ThresholdProposals(arg0 *big.Int) (struct {
	NewValue     *big.Int
	ProposalType uint8
	NumYes       *big.Int
	NumNo        *big.Int
	Status       uint8
}, error) {
	return _Receiver.Contract.ThresholdProposals(&_Receiver.CallOpts, arg0)
}

// ThresholdProposals is a free data retrieval call binding the contract method 0x95531e47.
//
// Solidity: function ThresholdProposals(uint256 ) constant returns(uint256 newValue, uint8 proposalType, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverCallerSession) ThresholdProposals(arg0 *big.Int) (struct {
	NewValue     *big.Int
	ProposalType uint8
	NumYes       *big.Int
	NumNo        *big.Int
	Status       uint8
}, error) {
	return _Receiver.Contract.ThresholdProposals(&_Receiver.CallOpts, arg0)
}

// TotalValidators is a free data retrieval call binding the contract method 0x60e4f8ab.
//
// Solidity: function TotalValidators() constant returns(uint256)
func (_Receiver *ReceiverCaller) TotalValidators(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Receiver.contract.Call(opts, out, "TotalValidators")
	return *ret0, err
}

// TotalValidators is a free data retrieval call binding the contract method 0x60e4f8ab.
//
// Solidity: function TotalValidators() constant returns(uint256)
func (_Receiver *ReceiverSession) TotalValidators() (*big.Int, error) {
	return _Receiver.Contract.TotalValidators(&_Receiver.CallOpts)
}

// TotalValidators is a free data retrieval call binding the contract method 0x60e4f8ab.
//
// Solidity: function TotalValidators() constant returns(uint256)
func (_Receiver *ReceiverCallerSession) TotalValidators() (*big.Int, error) {
	return _Receiver.Contract.TotalValidators(&_Receiver.CallOpts)
}

// ValidatorProposals is a free data retrieval call binding the contract method 0x23589e81.
//
// Solidity: function ValidatorProposals(address ) constant returns(address validator, uint8 action, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverCaller) ValidatorProposals(opts *bind.CallOpts, arg0 common.Address) (struct {
	Validator common.Address
	Action    uint8
	NumYes    *big.Int
	NumNo     *big.Int
	Status    uint8
}, error) {
	ret := new(struct {
		Validator common.Address
		Action    uint8
		NumYes    *big.Int
		NumNo     *big.Int
		Status    uint8
	})
	out := ret
	err := _Receiver.contract.Call(opts, out, "ValidatorProposals", arg0)
	return *ret, err
}

// ValidatorProposals is a free data retrieval call binding the contract method 0x23589e81.
//
// Solidity: function ValidatorProposals(address ) constant returns(address validator, uint8 action, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverSession) ValidatorProposals(arg0 common.Address) (struct {
	Validator common.Address
	Action    uint8
	NumYes    *big.Int
	NumNo     *big.Int
	Status    uint8
}, error) {
	return _Receiver.Contract.ValidatorProposals(&_Receiver.CallOpts, arg0)
}

// ValidatorProposals is a free data retrieval call binding the contract method 0x23589e81.
//
// Solidity: function ValidatorProposals(address ) constant returns(address validator, uint8 action, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverCallerSession) ValidatorProposals(arg0 common.Address) (struct {
	Validator common.Address
	Action    uint8
	NumYes    *big.Int
	NumNo     *big.Int
	Status    uint8
}, error) {
	return _Receiver.Contract.ValidatorProposals(&_Receiver.CallOpts, arg0)
}

// ValidatorThreshold is a free data retrieval call binding the contract method 0x50d68ed8.
//
// Solidity: function ValidatorThreshold() constant returns(uint256)
func (_Receiver *ReceiverCaller) ValidatorThreshold(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Receiver.contract.Call(opts, out, "ValidatorThreshold")
	return *ret0, err
}

// ValidatorThreshold is a free data retrieval call binding the contract method 0x50d68ed8.
//
// Solidity: function ValidatorThreshold() constant returns(uint256)
func (_Receiver *ReceiverSession) ValidatorThreshold() (*big.Int, error) {
	return _Receiver.Contract.ValidatorThreshold(&_Receiver.CallOpts)
}

// ValidatorThreshold is a free data retrieval call binding the contract method 0x50d68ed8.
//
// Solidity: function ValidatorThreshold() constant returns(uint256)
func (_Receiver *ReceiverCallerSession) ValidatorThreshold() (*big.Int, error) {
	return _Receiver.Contract.ValidatorThreshold(&_Receiver.CallOpts)
}

// Validators is a free data retrieval call binding the contract method 0x277ae8dd.
//
// Solidity: function Validators(address ) constant returns(bool)
func (_Receiver *ReceiverCaller) Validators(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Receiver.contract.Call(opts, out, "Validators", arg0)
	return *ret0, err
}

// Validators is a free data retrieval call binding the contract method 0x277ae8dd.
//
// Solidity: function Validators(address ) constant returns(bool)
func (_Receiver *ReceiverSession) Validators(arg0 common.Address) (bool, error) {
	return _Receiver.Contract.Validators(&_Receiver.CallOpts, arg0)
}

// Validators is a free data retrieval call binding the contract method 0x277ae8dd.
//
// Solidity: function Validators(address ) constant returns(bool)
func (_Receiver *ReceiverCallerSession) Validators(arg0 common.Address) (bool, error) {
	return _Receiver.Contract.Validators(&_Receiver.CallOpts, arg0)
}

// GetDepositProposal is a free data retrieval call binding the contract method 0xcb4815e0.
//
// Solidity: function getDepositProposal(uint256 _chainId, uint256 _depositId) constant returns(bytes32 hash, uint256 id, uint256 originChain, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverCaller) GetDepositProposal(opts *bind.CallOpts, _chainId *big.Int, _depositId *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	ret := new(struct {
		Hash        [32]byte
		Id          *big.Int
		OriginChain *big.Int
		NumYes      *big.Int
		NumNo       *big.Int
		Status      uint8
	})
	out := ret
	err := _Receiver.contract.Call(opts, out, "getDepositProposal", _chainId, _depositId)
	return *ret, err
}

// GetDepositProposal is a free data retrieval call binding the contract method 0xcb4815e0.
//
// Solidity: function getDepositProposal(uint256 _chainId, uint256 _depositId) constant returns(bytes32 hash, uint256 id, uint256 originChain, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverSession) GetDepositProposal(_chainId *big.Int, _depositId *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	return _Receiver.Contract.GetDepositProposal(&_Receiver.CallOpts, _chainId, _depositId)
}

// GetDepositProposal is a free data retrieval call binding the contract method 0xcb4815e0.
//
// Solidity: function getDepositProposal(uint256 _chainId, uint256 _depositId) constant returns(bytes32 hash, uint256 id, uint256 originChain, uint256 numYes, uint256 numNo, uint8 status)
func (_Receiver *ReceiverCallerSession) GetDepositProposal(_chainId *big.Int, _depositId *big.Int) (struct {
	Hash        [32]byte
	Id          *big.Int
	OriginChain *big.Int
	NumYes      *big.Int
	NumNo       *big.Int
	Status      uint8
}, error) {
	return _Receiver.Contract.GetDepositProposal(&_Receiver.CallOpts, _chainId, _depositId)
}

// CreateDepositProposal is a paid mutator transaction binding the contract method 0x2bfd6d08.
//
// Solidity: function createDepositProposal(bytes32 _hash, uint256 _depositId, uint256 _originChain) returns()
func (_Receiver *ReceiverTransactor) CreateDepositProposal(opts *bind.TransactOpts, _hash [32]byte, _depositId *big.Int, _originChain *big.Int) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "createDepositProposal", _hash, _depositId, _originChain)
}

// CreateDepositProposal is a paid mutator transaction binding the contract method 0x2bfd6d08.
//
// Solidity: function createDepositProposal(bytes32 _hash, uint256 _depositId, uint256 _originChain) returns()
func (_Receiver *ReceiverSession) CreateDepositProposal(_hash [32]byte, _depositId *big.Int, _originChain *big.Int) (*types.Transaction, error) {
	return _Receiver.Contract.CreateDepositProposal(&_Receiver.TransactOpts, _hash, _depositId, _originChain)
}

// CreateDepositProposal is a paid mutator transaction binding the contract method 0x2bfd6d08.
//
// Solidity: function createDepositProposal(bytes32 _hash, uint256 _depositId, uint256 _originChain) returns()
func (_Receiver *ReceiverTransactorSession) CreateDepositProposal(_hash [32]byte, _depositId *big.Int, _originChain *big.Int) (*types.Transaction, error) {
	return _Receiver.Contract.CreateDepositProposal(&_Receiver.TransactOpts, _hash, _depositId, _originChain)
}

// CreateThresholdProposal is a paid mutator transaction binding the contract method 0xb3225369.
//
// Solidity: function createThresholdProposal(uint256 _value, uint8 _type) returns()
func (_Receiver *ReceiverTransactor) CreateThresholdProposal(opts *bind.TransactOpts, _value *big.Int, _type uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "createThresholdProposal", _value, _type)
}

// CreateThresholdProposal is a paid mutator transaction binding the contract method 0xb3225369.
//
// Solidity: function createThresholdProposal(uint256 _value, uint8 _type) returns()
func (_Receiver *ReceiverSession) CreateThresholdProposal(_value *big.Int, _type uint8) (*types.Transaction, error) {
	return _Receiver.Contract.CreateThresholdProposal(&_Receiver.TransactOpts, _value, _type)
}

// CreateThresholdProposal is a paid mutator transaction binding the contract method 0xb3225369.
//
// Solidity: function createThresholdProposal(uint256 _value, uint8 _type) returns()
func (_Receiver *ReceiverTransactorSession) CreateThresholdProposal(_value *big.Int, _type uint8) (*types.Transaction, error) {
	return _Receiver.Contract.CreateThresholdProposal(&_Receiver.TransactOpts, _value, _type)
}

// CreateValidatorProposal is a paid mutator transaction binding the contract method 0x331ba913.
//
// Solidity: function createValidatorProposal(address _addr, uint8 _action) returns()
func (_Receiver *ReceiverTransactor) CreateValidatorProposal(opts *bind.TransactOpts, _addr common.Address, _action uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "createValidatorProposal", _addr, _action)
}

// CreateValidatorProposal is a paid mutator transaction binding the contract method 0x331ba913.
//
// Solidity: function createValidatorProposal(address _addr, uint8 _action) returns()
func (_Receiver *ReceiverSession) CreateValidatorProposal(_addr common.Address, _action uint8) (*types.Transaction, error) {
	return _Receiver.Contract.CreateValidatorProposal(&_Receiver.TransactOpts, _addr, _action)
}

// CreateValidatorProposal is a paid mutator transaction binding the contract method 0x331ba913.
//
// Solidity: function createValidatorProposal(address _addr, uint8 _action) returns()
func (_Receiver *ReceiverTransactorSession) CreateValidatorProposal(_addr common.Address, _action uint8) (*types.Transaction, error) {
	return _Receiver.Contract.CreateValidatorProposal(&_Receiver.TransactOpts, _addr, _action)
}

// ExecuteDeposit is a paid mutator transaction binding the contract method 0x9bf48642.
//
// Solidity: function executeDeposit(uint256 _originChainId, uint256 _depositId, address _to, bytes _data) returns()
func (_Receiver *ReceiverTransactor) ExecuteDeposit(opts *bind.TransactOpts, _originChainId *big.Int, _depositId *big.Int, _to common.Address, _data []byte) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "executeDeposit", _originChainId, _depositId, _to, _data)
}

// ExecuteDeposit is a paid mutator transaction binding the contract method 0x9bf48642.
//
// Solidity: function executeDeposit(uint256 _originChainId, uint256 _depositId, address _to, bytes _data) returns()
func (_Receiver *ReceiverSession) ExecuteDeposit(_originChainId *big.Int, _depositId *big.Int, _to common.Address, _data []byte) (*types.Transaction, error) {
	return _Receiver.Contract.ExecuteDeposit(&_Receiver.TransactOpts, _originChainId, _depositId, _to, _data)
}

// ExecuteDeposit is a paid mutator transaction binding the contract method 0x9bf48642.
//
// Solidity: function executeDeposit(uint256 _originChainId, uint256 _depositId, address _to, bytes _data) returns()
func (_Receiver *ReceiverTransactorSession) ExecuteDeposit(_originChainId *big.Int, _depositId *big.Int, _to common.Address, _data []byte) (*types.Transaction, error) {
	return _Receiver.Contract.ExecuteDeposit(&_Receiver.TransactOpts, _originChainId, _depositId, _to, _data)
}

// VoteDepositProposal is a paid mutator transaction binding the contract method 0xe7d3696c.
//
// Solidity: function voteDepositProposal(uint256 _originChainId, uint256 _depositId, uint8 _vote) returns()
func (_Receiver *ReceiverTransactor) VoteDepositProposal(opts *bind.TransactOpts, _originChainId *big.Int, _depositId *big.Int, _vote uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "voteDepositProposal", _originChainId, _depositId, _vote)
}

// VoteDepositProposal is a paid mutator transaction binding the contract method 0xe7d3696c.
//
// Solidity: function voteDepositProposal(uint256 _originChainId, uint256 _depositId, uint8 _vote) returns()
func (_Receiver *ReceiverSession) VoteDepositProposal(_originChainId *big.Int, _depositId *big.Int, _vote uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteDepositProposal(&_Receiver.TransactOpts, _originChainId, _depositId, _vote)
}

// VoteDepositProposal is a paid mutator transaction binding the contract method 0xe7d3696c.
//
// Solidity: function voteDepositProposal(uint256 _originChainId, uint256 _depositId, uint8 _vote) returns()
func (_Receiver *ReceiverTransactorSession) VoteDepositProposal(_originChainId *big.Int, _depositId *big.Int, _vote uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteDepositProposal(&_Receiver.TransactOpts, _originChainId, _depositId, _vote)
}

// VoteThresholdProposal is a paid mutator transaction binding the contract method 0xdcc2e4db.
//
// Solidity: function voteThresholdProposal(uint8 _vote, uint8 _type) returns()
func (_Receiver *ReceiverTransactor) VoteThresholdProposal(opts *bind.TransactOpts, _vote uint8, _type uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "voteThresholdProposal", _vote, _type)
}

// VoteThresholdProposal is a paid mutator transaction binding the contract method 0xdcc2e4db.
//
// Solidity: function voteThresholdProposal(uint8 _vote, uint8 _type) returns()
func (_Receiver *ReceiverSession) VoteThresholdProposal(_vote uint8, _type uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteThresholdProposal(&_Receiver.TransactOpts, _vote, _type)
}

// VoteThresholdProposal is a paid mutator transaction binding the contract method 0xdcc2e4db.
//
// Solidity: function voteThresholdProposal(uint8 _vote, uint8 _type) returns()
func (_Receiver *ReceiverTransactorSession) VoteThresholdProposal(_vote uint8, _type uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteThresholdProposal(&_Receiver.TransactOpts, _vote, _type)
}

// VoteValidatorProposal is a paid mutator transaction binding the contract method 0x62e73263.
//
// Solidity: function voteValidatorProposal(address _addr, uint8 _vote) returns()
func (_Receiver *ReceiverTransactor) VoteValidatorProposal(opts *bind.TransactOpts, _addr common.Address, _vote uint8) (*types.Transaction, error) {
	return _Receiver.contract.Transact(opts, "voteValidatorProposal", _addr, _vote)
}

// VoteValidatorProposal is a paid mutator transaction binding the contract method 0x62e73263.
//
// Solidity: function voteValidatorProposal(address _addr, uint8 _vote) returns()
func (_Receiver *ReceiverSession) VoteValidatorProposal(_addr common.Address, _vote uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteValidatorProposal(&_Receiver.TransactOpts, _addr, _vote)
}

// VoteValidatorProposal is a paid mutator transaction binding the contract method 0x62e73263.
//
// Solidity: function voteValidatorProposal(address _addr, uint8 _vote) returns()
func (_Receiver *ReceiverTransactorSession) VoteValidatorProposal(_addr common.Address, _vote uint8) (*types.Transaction, error) {
	return _Receiver.Contract.VoteValidatorProposal(&_Receiver.TransactOpts, _addr, _vote)
}

// ReceiverDepositExecutedIterator is returned from FilterDepositExecuted and is used to iterate over the raw logs and unpacked data for DepositExecuted events raised by the Receiver contract.
type ReceiverDepositExecutedIterator struct {
	Event *ReceiverDepositExecuted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ReceiverDepositExecutedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ReceiverDepositExecuted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ReceiverDepositExecuted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ReceiverDepositExecutedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ReceiverDepositExecutedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ReceiverDepositExecuted represents a DepositExecuted event raised by the Receiver contract.
type ReceiverDepositExecuted struct {
	OriginChainId *big.Int
	DepositId     *big.Int
	To            common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterDepositExecuted is a free log retrieval operation binding the contract event 0x27d38e802660c3b01a484e1e1928270cd6325dd105c1fe943e7e8c71346ec367.
//
// Solidity: event DepositExecuted(uint256 _originChainId, uint256 _depositId, address _to)
func (_Receiver *ReceiverFilterer) FilterDepositExecuted(opts *bind.FilterOpts) (*ReceiverDepositExecutedIterator, error) {

	logs, sub, err := _Receiver.contract.FilterLogs(opts, "DepositExecuted")
	if err != nil {
		return nil, err
	}
	return &ReceiverDepositExecutedIterator{contract: _Receiver.contract, event: "DepositExecuted", logs: logs, sub: sub}, nil
}

// WatchDepositExecuted is a free log subscription operation binding the contract event 0x27d38e802660c3b01a484e1e1928270cd6325dd105c1fe943e7e8c71346ec367.
//
// Solidity: event DepositExecuted(uint256 _originChainId, uint256 _depositId, address _to)
func (_Receiver *ReceiverFilterer) WatchDepositExecuted(opts *bind.WatchOpts, sink chan<- *ReceiverDepositExecuted) (event.Subscription, error) {

	logs, sub, err := _Receiver.contract.WatchLogs(opts, "DepositExecuted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ReceiverDepositExecuted)
				if err := _Receiver.contract.UnpackLog(event, "DepositExecuted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDepositExecuted is a log parse operation binding the contract event 0x27d38e802660c3b01a484e1e1928270cd6325dd105c1fe943e7e8c71346ec367.
//
// Solidity: event DepositExecuted(uint256 _originChainId, uint256 _depositId, address _to)
func (_Receiver *ReceiverFilterer) ParseDepositExecuted(log types.Log) (*ReceiverDepositExecuted, error) {
	event := new(ReceiverDepositExecuted)
	if err := _Receiver.contract.UnpackLog(event, "DepositExecuted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ReceiverDepositProposalCreatedIterator is returned from FilterDepositProposalCreated and is used to iterate over the raw logs and unpacked data for DepositProposalCreated events raised by the Receiver contract.
type ReceiverDepositProposalCreatedIterator struct {
	Event *ReceiverDepositProposalCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ReceiverDepositProposalCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ReceiverDepositProposalCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ReceiverDepositProposalCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ReceiverDepositProposalCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ReceiverDepositProposalCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ReceiverDepositProposalCreated represents a DepositProposalCreated event raised by the Receiver contract.
type ReceiverDepositProposalCreated struct {
	Hash        [32]byte
	DepositId   *big.Int
	OriginChain *big.Int
	VoteStatus  uint8
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterDepositProposalCreated is a free log retrieval operation binding the contract event 0xa3c54ef04177bc4ee7cfc4f38715fd8ea57d3684f5c1dab61c4c7a50cd1c207a.
//
// Solidity: event DepositProposalCreated(bytes32 _hash, uint256 _depositId, uint256 _originChain, uint8 _voteStatus)
func (_Receiver *ReceiverFilterer) FilterDepositProposalCreated(opts *bind.FilterOpts) (*ReceiverDepositProposalCreatedIterator, error) {

	logs, sub, err := _Receiver.contract.FilterLogs(opts, "DepositProposalCreated")
	if err != nil {
		return nil, err
	}
	return &ReceiverDepositProposalCreatedIterator{contract: _Receiver.contract, event: "DepositProposalCreated", logs: logs, sub: sub}, nil
}

// WatchDepositProposalCreated is a free log subscription operation binding the contract event 0xa3c54ef04177bc4ee7cfc4f38715fd8ea57d3684f5c1dab61c4c7a50cd1c207a.
//
// Solidity: event DepositProposalCreated(bytes32 _hash, uint256 _depositId, uint256 _originChain, uint8 _voteStatus)
func (_Receiver *ReceiverFilterer) WatchDepositProposalCreated(opts *bind.WatchOpts, sink chan<- *ReceiverDepositProposalCreated) (event.Subscription, error) {

	logs, sub, err := _Receiver.contract.WatchLogs(opts, "DepositProposalCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ReceiverDepositProposalCreated)
				if err := _Receiver.contract.UnpackLog(event, "DepositProposalCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDepositProposalCreated is a log parse operation binding the contract event 0xa3c54ef04177bc4ee7cfc4f38715fd8ea57d3684f5c1dab61c4c7a50cd1c207a.
//
// Solidity: event DepositProposalCreated(bytes32 _hash, uint256 _depositId, uint256 _originChain, uint8 _voteStatus)
func (_Receiver *ReceiverFilterer) ParseDepositProposalCreated(log types.Log) (*ReceiverDepositProposalCreated, error) {
	event := new(ReceiverDepositProposalCreated)
	if err := _Receiver.contract.UnpackLog(event, "DepositProposalCreated", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ReceiverDepositProposalVoteIterator is returned from FilterDepositProposalVote and is used to iterate over the raw logs and unpacked data for DepositProposalVote events raised by the Receiver contract.
type ReceiverDepositProposalVoteIterator struct {
	Event *ReceiverDepositProposalVote // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ReceiverDepositProposalVoteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ReceiverDepositProposalVote)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ReceiverDepositProposalVote)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ReceiverDepositProposalVoteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ReceiverDepositProposalVoteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ReceiverDepositProposalVote represents a DepositProposalVote event raised by the Receiver contract.
type ReceiverDepositProposalVote struct {
	OriginChainId *big.Int
	DepositId     *big.Int
	Vote          uint8
	VoteStatus    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterDepositProposalVote is a free log retrieval operation binding the contract event 0x40fc0ff8dcb86fbd4d70d3e1237dbd6dab58a03c8a1a3af7b27a4f70b540a66b.
//
// Solidity: event DepositProposalVote(uint256 _originChainId, uint256 _depositId, uint8 _vote, uint8 _voteStatus)
func (_Receiver *ReceiverFilterer) FilterDepositProposalVote(opts *bind.FilterOpts) (*ReceiverDepositProposalVoteIterator, error) {

	logs, sub, err := _Receiver.contract.FilterLogs(opts, "DepositProposalVote")
	if err != nil {
		return nil, err
	}
	return &ReceiverDepositProposalVoteIterator{contract: _Receiver.contract, event: "DepositProposalVote", logs: logs, sub: sub}, nil
}

// WatchDepositProposalVote is a free log subscription operation binding the contract event 0x40fc0ff8dcb86fbd4d70d3e1237dbd6dab58a03c8a1a3af7b27a4f70b540a66b.
//
// Solidity: event DepositProposalVote(uint256 _originChainId, uint256 _depositId, uint8 _vote, uint8 _voteStatus)
func (_Receiver *ReceiverFilterer) WatchDepositProposalVote(opts *bind.WatchOpts, sink chan<- *ReceiverDepositProposalVote) (event.Subscription, error) {

	logs, sub, err := _Receiver.contract.WatchLogs(opts, "DepositProposalVote")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ReceiverDepositProposalVote)
				if err := _Receiver.contract.UnpackLog(event, "DepositProposalVote", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDepositProposalVote is a log parse operation binding the contract event 0x40fc0ff8dcb86fbd4d70d3e1237dbd6dab58a03c8a1a3af7b27a4f70b540a66b.
//
// Solidity: event DepositProposalVote(uint256 _originChainId, uint256 _depositId, uint8 _vote, uint8 _voteStatus)
func (_Receiver *ReceiverFilterer) ParseDepositProposalVote(log types.Log) (*ReceiverDepositProposalVote, error) {
	event := new(ReceiverDepositProposalVote)
	if err := _Receiver.contract.UnpackLog(event, "DepositProposalVote", log); err != nil {
		return nil, err
	}
	return event, nil
}
